<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carbonoz SolarAutopilot</title>
   
   <style>
:root {
  --primary: #DEAF0B;
  --secondary: #8b5cf6;
  --success: #10b981;
  --danger: #ef4444;
  --warning: #f59e0b;
  --info: #3b82f6;
  --light: #f3f4f6;
  --dark: #1f2937;
  --gradient-blue: linear-gradient(135deg, #60a5fa 0%, #5e60ce 100%);
  --gradient-purple: linear-gradient(135deg, #8b5cf6 0%, #d946ef 100%);
  --gradient-voltage: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
  --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --transition: all 0.3s ease;
}

   
   body, html {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: var(--bg-color);
    
   }
    /* Sidebar styles */
    .sidebar {
        width: 280px;
        height: 100vh;
        background-color: white;
        border-right: 1px solid #e5e7eb;
        display: flex;
        flex-direction: column;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
        transition: width 0.3s ease;
    }
   
           .logo-container {
               padding: 1.5rem;
               border-bottom: 1px solid #e5e7eb;
               display: flex;
               align-items: center;
               gap: 0.75rem;
           }
   
           .logo-icon {
    width: 50px;
    height: 50px;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: bold;
    font-size: 20px;
   }
   
   .logo-text {
    margin-left: 10px;
    font-weight: bold;
    color: #2f3640;
    font-size: 18px;
   }
   
   .logo-text .highlight {
    color: #DEAF0B;
    margin-left: 10px;
   }
   
   
   nav {
    flex-grow: 1;
   }
   
   nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
   }
   nav li {
    padding: 15px 20px;
    display: flex;
    align-items: center;
    color: var(--text-color);
    cursor: pointer;
    transition: background-color 0.3s;
    font-size: 18px;
   }
   
   nav li a{
    text-decoration: none;
    color: #2f3640;
    font-weight: bold;
   }
   nav li:hover {
    background-color: var(--bg-color);
   }
   
   nav li i {
    margin-right: 15px;
    color: var(--icon-color);
    font-size: 24px;
   }
   
   .bottom-options {
    padding: 20px;
    border-top: 1px solid #dcdde1;
   }
   
   .toggle-sidebar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    font-size: 16px;
   }
   
   .toggle-text {
    margin-right: 10px;
   }
   
   .toggle-switch {
    width: 50px;
    height: 25px;
    background-color: #dcdde1;
    border-radius: 12.5px;
    position: relative;
    transition: background-color 0.3s;
   }
   .toggle-switch::before {
    content: '';
    position: absolute;
    width: 21px;
    height: 21px;
    border-radius: 50%;
    background-color: white;
    top: 2px;
    left: 2px;
    transition: transform 0.3s;
   }
   
   .toggle-switch.active {
    background-color: var(--primary-color);
   }
   
   .toggle-switch.active::before {
    transform: translateX(25px);
   }
   
   .sidebar.collapsed .logo-text,
   .sidebar.collapsed .search,
   .sidebar.collapsed nav li span,
   .sidebar.collapsed .toggle-text {
    display: none;
   }
   
   .sidebar.collapsed .logo {
    justify-content: center;
   }
   
   .sidebar.collapsed nav li {
    justify-content: center;
   }
   
   .sidebar.collapsed nav li i {
    margin-right: 0;
   }
           /* Main content styles */
           .main-content {
               flex: 1;
               margin-left: 280px;
               padding: 2rem;
           }
   
           .content-header {
               margin-bottom: 2rem;
           }
   
           .content-header h2 {
               font-size: 1.875rem;
               font-weight: 700;
               color: #111827;
           }
   
           .metrics-grid {
               display: grid;
               grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
               gap: 1.5rem;
               margin-bottom: 2rem;
           }
   
           .metric-card {
               background: white;
               border-radius: 12px;
               padding: 1.5rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .metric-title {
               font-size: 0.875rem;
               font-weight: 600;
               color: #4b5563;
               margin-bottom: 0.5rem;
           }
   
           .metric-value {
               font-size: 1.5rem;
               font-weight: 700;
               margin-bottom: 0.25rem;
           }
   
           .metric-subtitle {
               font-size: 0.875rem;
               color: #6b7280;
           }
   
           .chart-container {
               background: white;
               border-radius: 12px;
               padding: 1.5rem;
               margin-bottom: 2rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .chart-wrapper {
               height: 400px;
               margin-top: 1rem;
           }
   
           .period-buttons {
               display: flex;
               gap: 0.75rem;
               margin-bottom: 1rem;
           }
   
           .period-btn {
               padding: 0.5rem 1rem;
               border: none;
               background-color: #e5e7eb;
               color: #4b5563;
               border-radius: 6px;
               cursor: pointer;
               font-weight: 500;
               transition: all 0.2s;
           }
   
           .period-btn:hover {
               background-color: #d1d5db;
           }
   
           .period-btn.active {
               background-color: #DEAF0B;
               color: white;
           }
   
           /* Toggle styles */
           .toggle {
               position: relative;
               display: inline-block;
               width: 44px;
               height: 24px;
           }
   
           .toggle input {
               opacity: 0;
               width: 0;
               height: 0;
           }
   
           .slider {
               position: absolute;
               cursor: pointer;
               top: 0;
               left: 0;
               right: 0;
               bottom: 0;
               background-color: #e5e7eb;
               transition: .4s;
               border-radius: 34px;
           }
   
           .slider:before {
               position: absolute;
               content: "";
               height: 16px;
               width: 16px;
               left: 4px;
               bottom: 4px;
               background-color: white;
               transition: .4s;
               border-radius: 50%;
           }
   
           input:checked + .slider {
               background-color: #DEAF0B;
           }
   
           input:checked + .slider:before {
               transform: translateX(20px);
           }
   
           /* Updated and new styles */
           .bottom-controls {
               padding: 1.5rem;
               border-top: 1px solid #e5e7eb;
           }
   
           .control-item {
               display: flex;
               justify-content: space-between;
               align-items: center;
               margin-bottom: 1rem;
           }
   
           .control-label {
               font-size: 0.875rem;
               color: #4b5563;
           }
   
           .toggle {
               position: relative;
               display: inline-block;
               width: 44px;
               height: 24px;
           }
   
           .toggle input {
               opacity: 0;
               width: 0;
               height: 0;
           }
   
           .sidebar {
    width: 280px;
    background-color: white;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    transition: width 0.3s ease;
    z-index: 10;
   }
   
   .sidebar.collapsed {
    width: 80px;
   }
   
   .logo {
    display: flex;
    align-items: center;
    padding: 20px;
   }
   
   
           input:checked + .slider {
               background-color: #DEAF0B;
           }
   
           input:checked + .slider:before {
               transform: translateX(20px);
           }
   
           .total-emissions {
               font-size: 1.25rem;
               font-weight: 600;
               margin-bottom: 1rem;
               color: #374151;
           }
   
           .summary-grid {
               display: grid;
               grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
               gap: 1rem;
               margin-bottom: 2rem;
           }
   
           .summary-item {
               background-color: white;
               border-radius: 8px;
               padding: 1rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .summary-label {
               font-size: 0.875rem;
               color: #6b7280;
               display: block;
               margin-bottom: 0.5rem;
           }
   
           .summary-value {
               font-size: 1.25rem;
               font-weight: 600;
           }
   
       
   
           /* Responsive styles */
           @media (max-width: 768px) {
               .sidebar {
                   width: 100%;
                   height: auto;
                   position: static;
                   border-right: none;
                   border-bottom: 1px solid #e5e7eb;
               }
   
               .main-content {
                   margin-left: 0;
               }
   
               body.collapsed-sidebar .sidebar {
                   display: none;
               }
   
               body.collapsed-sidebar .main-content {
                   margin-left: 0;
               }
   
               .metrics-grid,
               .summary-grid {
                   grid-template-columns: 1fr;
               }
   
               .period-buttons {
                   flex-wrap: wrap;
               }
   
               .period-btn {
                   flex: 1 0 calc(50% - 0.375rem);
                   margin-bottom: 0.75rem;
               }
           }

/* loading css */

.loading-overlay {
 position: fixed;
 top: 0;
 left: 0;
 width: 100%;
 height: 100%;
 background-color: #f8f9fa;
 display: flex;
 justify-content: center;
 align-items: center;
 z-index: 9999;
}

.loading-spinner {
 width: 50px;
 height: 50px;
 border: 5px solid #e0e0e0;
 border-top: 5px solid #3498db;
 border-radius: 50%;
 animation: spin 1s linear infinite;
}

@keyframes spin {
 0% { transform: rotate(0deg); }
 100% { transform: rotate(360deg); }
}

.dashboard-column {
flex-basis: calc(33.33333% - 2px);
margin-right: 2px;
margin-bottom: 2px;
}

@media only screen and (max-width: 128em) {
.dashboard-column {
 flex-basis: calc(50% - 2px);
}
}

@media only screen and (max-width: 62em) {
.dashboard-column {
 flex-basis: calc(100% - 2px);
}
}

.dashboard-column .card {
border: 0;
}

.dashboard-column .card .iframe-moving {
display: block;
height: 100%;
min-height: 33em;
position: relative;
width: 100%;
}

@media only screen and (max-width: 46em) {
.dashboard-column .card .iframe-moving {
 min-height: 107em;
}
}
.dashboard-column .card .iframe-overview {
display: block;
height: 100%;
min-height: 22em;
width: 100%;
}

@media only screen and (max-width: 46em) {
.dashboard-column .card .iframe-overview {
 min-height: 18em;
}
}

.dashboard-column .card .iframe-battery-power {
display: block;
height: 60%;
min-height: 18em;
width: 100%;
}

@media only screen and (max-width: 46em) {
.dashboard-column .card .iframe-battery-power {
 min-height: 15em;
}
}

.dashboard-column .card .iframe-battery-soc {
display: block;
height: 40%;
min-height: 14em;
width: 100%;
}

@media only screen and (max-width: 46em) {
.dashboard-column .card .iframe-battery-soc {
 min-height: 12em;
}
}

/* Dark mode styles */
body.dark-mode {
    background-color: rgba(24, 27, 31, 1);
 color: #f5f6fa;
}

.dark-mode .main-content{
    background-color: rgba(24, 27, 31, 1);
    color: #f5f6fa;
}

.dark-mode .sidebar {
    background-color: rgba(24, 27, 31, 1);
}

.dark-mode .sidebar .logo-icon {
 color: #2f3640;
}

.dark-mode .sidebar .logo-text {
 color: #f5f6fa;
}

.dark-mode .sidebar nav li {
 color: #f5f6fa;
}

.dark-mode .sidebar nav li:hover {
 background-color: #383838;
}

.dark-mode .sidebar nav li a {
 color: #f5f6fa;
}

.dark-mode .sidebar nav li i {
 color: #dcdde1;
}

.dark-mode .toggle-sidebar,
.dark-mode .toggle-dark-mode {
 color: #f5f6fa;
}

.dark-mode .toggle-switch {
    background-color: var(--primary-color);
}

.dark-mode .toggle-switch.active {
 background-color: var(--primary-color);
}

.dark-mode header {
    background-color: rgb(17, 18, 23);
}

.dark-mode .content-card {
    background-color: rgba(24, 27, 31, 1);
 color: #fff;
}


.dark-mode .loading-overlay{
    background-color: rgba(24, 27, 31, 1);
}

/* Mobile Sidebar Improvements */
@media (max-width: 768px) {
    /* Sidebar base styles */
    .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 280px;
        transform: translateX(-100%);
        transition: transform 0.3s ease-in-out;
        z-index: 1000;
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
        box-shadow: none;
    }

    .sidebar.active {
        transform: translateX(0);
        box-shadow: 2px 0 12px rgba(0, 0, 0, 0.15);
    }

    /* Improved hamburger button */
    .mobile-toggle {
        display: block;
        position: fixed;
        top: 1rem;
        left: 1rem;
        z-index: 1001;
        background: none;
        border: none;
        cursor: pointer;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: white;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        padding: 8px;
    }

    .mobile-toggle span {
        display: block;
        width: 24px;
        height: 2px;
        background-color: var(--text-color);
        margin: 5px auto;
        transition: transform 0.3s ease, opacity 0.3s ease;
    }

    .mobile-toggle.active span:nth-child(1) {
        transform: translateY(7px) rotate(45deg);
    }

    .mobile-toggle.active span:nth-child(2) {
        opacity: 0;
    }

    .mobile-toggle.active span:nth-child(3) {
        transform: translateY(-7px) rotate(-45deg);
    }

    /* Improved nav items */
    .sidebar nav ul {
        padding: 1rem 0;
    }

    .sidebar nav li {
        padding: 0.875rem 1.5rem;
        margin: 0.25rem 1rem;
        border-radius: 8px;
        transition: background-color 0.2s ease;
    }

    .sidebar nav li a {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 1rem;
        color: var(--text-color);
    }

    .sidebar nav li i {
        font-size: 1.25rem;
        min-width: 24px;
        text-align: center;
    }

    .sidebar nav li:active {
        background-color: rgba(0, 0, 0, 0.05);
    }

    /* Improved overlay */
    .sidebar-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.4);
        backdrop-filter: blur(2px);
        z-index: 999;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .sidebar-overlay.active {
        display: block;
        opacity: 1;
    }

    /* Dark mode adjustments */
    .dark-mode .mobile-toggle {
        background-color: rgba(255, 255, 255, 0.1);
    }

    .dark-mode .mobile-toggle span {
        background-color: #f5f6fa;
    }

    .dark-mode .sidebar nav li:active {
        background-color: rgba(255, 255, 255, 0.05);
    }
}

/* Ensure main content adjusts properly */
@media (max-width: 768px) {
    .main-content {
        margin-left: 0;
        padding-top: 4.5rem;
        transition: margin-left 0.3s ease;
    }

    body.sidebar-open .main-content {
        filter: blur(2px);
        pointer-events: none;
    }
}


  /* Main content styling */
.main-content {
  flex: 1;
  margin-left: 280px;
  padding: 2rem;
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: margin-left 0.3s ease;
}
.main-content .container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Header */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.logo {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--dark);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.controls {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.toggle-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background-color: var(--primary);
  color: white;
  border: none;
  border-radius: 0.375rem;
  padding: 0.5rem 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
}

.toggle-button:hover {
  background-color: #DEAF0E;
}

.status-pill {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
}

.status-pill.active {
  background-color: rgba(16, 185, 129, 0.1);
  color: var(--success);
}

.status-pill.inactive {
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--danger);
}

.db-status {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--secondary);
}

/* Card layouts */
.flex-row {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.card {
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: var(--card-shadow);
  overflow: hidden;
  transition: var(--transition);
  flex: 1 1 calc(50% - 0.75rem);
  min-width: 300px;
  display: flex;
  flex-direction: column;
}

.dark-mode .card{
  background-color: rgb(32, 36, 41);
 
}

.card:hover {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  transform: translateY(-2px);
}

.grid-card {
  border-top: 4px solid var(--info);
}

.energy-card {
  border-top: 4px solid var(--secondary);
}

.voltage-card {
  border-top: 4px solid var(--primary);
}

.system-state-card {
  width: 100%;
  margin-bottom: 1.5rem;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-bottom: 1px solid #e5e7eb;
}



.card-title {
  font-size: 1.125rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.card-value {
  font-size: 2.25rem;
  font-weight: 700;
  text-align: center;
  padding: 1.5rem 1rem;
}

.card-footer {
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  color: #6b7280;
  border-bottom: 1px solid #e5e7eb;
}

.timestamp {
  font-weight: 500;
}

/* Tables */
.changes-table-container {
  overflow-x: auto;
  flex-grow: 1;
}

.changes-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.875rem;
}

.changes-table th {
  background-color: #f9fafb;
  text-align: left;
  padding: 0.75rem 1rem;
  font-weight: 600;
  color: #4b5563;
}

.dark-mode .changes-table th {
  background-color: #1a1d22;
  color: #f9fafb;;
}

.changes-table td {
  padding: 0.75rem 1rem;
  border-top: 1px solid #f3f4f6;
}

.changes-table tbody tr:hover {
  background-color: #f9fafb;
}
.dark-mode .changes-table tbody tr:hover {
  background-color: #1a1d22;
}
.view-all {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  text-decoration: none;
  color: var(--primary);
  font-weight: 500;
  background-color: #f9fafb;
  transition: var(--transition);
}
.dark-mode .view-all {
  background-color: rgba(24, 27, 31, 1);
}

.view-all:hover {
  background-color: #f3f4f6;
}
.dark-mode .view-all:hover {
  background-color: rgba(24, 27, 31, 6);
}
/* System state card */
.state-items {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  padding: 1rem;
}

.state-item {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.state-label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: #6b7280;
}

.state-value {
  font-size: 1.25rem;
  font-weight: 600;
}

.state-value.high {
  color: var(--success);
}

.state-value.medium {
  color: var(--warning);
}

.state-value.low {
  color: var(--danger);
}

/* Modern card styling for the image design */
.energy-pattern-card, .grid-charge-card, .voltage-point-card {
  border-radius: 1rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  margin-bottom: 1.5rem;
  flex: 1 1 calc(50% - 0.75rem);
  min-width: 300px;
}

.card-heading {
  padding: 1.5rem;
  color: white;
  font-weight: 600;
  font-size: 1.25rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.energy-pattern-card .card-heading {
  background: var(--gradient-blue);
}

.grid-charge-card .card-heading {
  background: var(--gradient-purple);
}

.voltage-point-card .card-heading {
  background: var(--gradient-voltage);
}

.card-content {
  padding: 0;
  background: white;
}

.change-item {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid #f3f4f6;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.change-date {
  text-align: right;
  font-size: 0.75rem;
  color: #6b7280;
}

.change-title {
  font-weight: 500;
}

.change-details {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.change-direction {
  color: #6b7280;
  font-size: 1.25rem;
}

.change-from, .change-to {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.change-label {
  font-size: 0.75rem;
  color: #6b7280;
}

.change-value {
  font-weight: 500;
}

.change-to .change-value {
  color: var(--primary);
}

.system-info {
  font-size: 0.75rem;
  color: #6b7280;
}

.view-all-link {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem;
  text-decoration: none;
  color: var(--primary);
  font-weight: 500;
  transition: var(--transition);
}

.view-all-link:hover {
  background-color: #f9fafb;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .flex-row {
    flex-direction: column;
  }
  
  .card {
    width: 100%;
    flex: 1 1 100%;
  }
  
  .state-items {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
  
  header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .controls {
    width: 100%;
    justify-content: space-between;
  }
}

/* Font awesome icon replacements */
.fas {
  display: inline-block;
  width: 1em;
  height: 1em;
  vertical-align: -0.125em;
}

.fa-bolt:before {
  content: "⚡";
}

.fa-plug:before {
  content: "🔌";
}

.fa-charging-station:before {
  content: "🔋";
}

.fa-power-off:before {
  content: "⏻";
}

.fa-brain:before {
  content: "🧠";
}

/* Fixed database icon */
.fa-database:before {
  content: "🗄️";
}

/* Fixed dashboard icon */
.fa-tachometer-alt:before {
  content: "🔍";
}

.fa-battery-three-quarters:before {
  content: "🔋";
}

.fa-solar-panel:before {
  content: "☀️";
}

.fa-exchange-alt:before {
  content: "⇄";
}

.fa-cog:before {
  content: "⚙️";
}

.fa-arrow-right:before {
  content: "→";
}


   </style>

</head>
<body>
      <!-- Add hamburger menu button -->
      <button class="mobile-toggle" id="mobileToggle">
        <span></span>
        <span></span>
        <span></span>
    </button>
    <div class="container">
        <div id="loadingOverlay" class="loading-overlay">
            <div class="loading-spinner"></div>
          </div>
          <div id="pageContent"> </div>
       
              <%- include('partials/sidebar') %>

     

            <div class="main-content">
            
             
                <div class="container">
                    <header>
                        <div class="logo">
                            <i class="fas fa-bolt"></i>
                            Energy Monitor
                        </div>
                        <div class="controls">
                            <button id="toggleLearner" class="toggle-button">
                                <i class="fas fa-power-off"></i>
                                <span id="learnerButtonText">Turn Off Learning Mode</span>
                            </button>
                            <span id="learnerStatus" class="status-pill active">
                                <i class="fas fa-brain"></i>
                                Learning Mode Active
                            </span>
                            <span id="dbStatus" class="db-status">
                                <i class="fas fa-database"></i>
                                Database Connected
                            </span>
                        </div>
                    </header>
                    
                    <div class="flex-row">
                        <div class="card grid-card">
                            <div class="card-header">
                                <div class="card-title">
                                    <i class="fas fa-plug"></i>
                                    Grid Charge Changes
                                </div>
                            </div>
                            <div class="card-value" id="gridChangeCount">12</div>
                            <div class="card-footer">Last change: <span id="lastGridChange" class="timestamp">2025-03-15 14:32:45</span></div>
                            <div class="changes-table-container">
                                <table class="changes-table" id="gridChangesTable">
                                    <thead>
                                        <tr>
                                            <th>Time</th>
                                            <th>Topic</th>
                                            <th>Old Value</th>
                                            <th>New Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>14:32:45</td>
                                            <td>grid_charge</td>
                                            <td>Enabled</td>
                                            <td>Disabled</td>
                                        </tr>
                                        <tr>
                                            <td>09:15:22</td>
                                            <td>grid_charge</td>
                                            <td>Disabled</td>
                                            <td>Enabled</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <a href="/grid-charge" class="view-all">View All Changes <i class="fas fa-arrow-right"></i></a>
                        </div>
                        
                        <div class="card energy-card">
                            <div class="card-header">
                                <div class="card-title">
                                    <i class="fas fa-charging-station"></i>
                                    Energy Pattern Changes
                                </div>
                            </div>
                            <div class="card-value" id="energyChangeCount">8</div>
                            <div class="card-footer">Last change: <span id="lastEnergyChange" class="timestamp">2025-03-17 08:45:12</span></div>
                            <div class="changes-table-container">
                                <table class="changes-table" id="energyChangesTable">
                                    <thead>
                                        <tr>
                                            <th>Time</th>
                                            <th>Topic</th>
                                            <th>Old Value</th>
                                            <th>New Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>08:45:12</td>
                                            <td>energy_pattern</td>
                                            <td>Grid-Tied</td>
                                            <td>Time-of-Use</td>
                                        </tr>
                                        <tr>
                                            <td>02:22:15</td>
                                            <td>energy_pattern</td>
                                            <td>Time-of-Use</td>
                                            <td>Off-Grid</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <a href="/energy-pattern" class="view-all">View All Changes <i class="fas fa-arrow-right"></i></a>
                        </div>
                        
                        <div class="card voltage-card">
                            <div class="card-header">
                                <div class="card-title">
                                    <i class="fas fa-bolt"></i>
                                    Voltage Point Changes
                                </div>
                            </div>
                            <div class="card-value" id="voltageChangeCount">6</div>
                            <div class="card-footer">Last change: <span id="lastVoltageChange" class="timestamp">2025-03-16 11:28:30</span></div>
                            <div class="changes-table-container">
                                <table class="changes-table" id="voltageChangesTable">
                                    <thead>
                                        <tr>
                                            <th>Time</th>
                                            <th>Topic</th>
                                            <th>Old Value</th>
                                            <th>New Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>11:28:30</td>
                                            <td>voltage_point</td>
                                            <td>46.2V</td>
                                            <td>47.5V</td>
                                        </tr>
                                        <tr>
                                            <td>05:14:10</td>
                                            <td>voltage_point</td>
                                            <td>45.8V</td>
                                            <td>46.2V</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <a href="/voltage-point" class="view-all">View All Changes <i class="fas fa-arrow-right"></i></a>
                        </div>
                    </div>
                    
                    <div class="card system-state-card">
                        <div class="card-header">
                            <div class="card-title">
                                <i class="fas fa-tachometer-alt"></i>
                                Current System State
                            </div>
                            <div class="timestamp" id="systemStateTime">Updated: 2025-03-18 09:45:30</div>
                        </div>
                        <div class="state-items">
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-battery-three-quarters"></i>
                                    Battery SOC
                                </div>
                                <div class="state-value high" id="batterySOC">85%</div>
                            </div>
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-solar-panel"></i>
                                    PV Power
                                </div>
                                <div class="state-value medium" id="pvPower">1250 W</div>
                            </div>
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-plug"></i>
                                    Load
                                </div>
                                <div class="state-value" id="load">850 W</div>
                            </div>
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-bolt"></i>
                                    Grid Voltage
                                </div>
                                <div class="state-value" id="gridVoltage">120.2 V</div>
                            </div>
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-exchange-alt"></i>
                                    Grid Power
                                </div>
                                <div class="state-value low" id="gridPower">-320 W</div>
                            </div>
                            <div class="state-item">
                                <div class="state-label">
                                    <i class="fas fa-cog"></i>
                                    Inverter State
                                </div>
                                <div class="state-value" id="inverterState">Discharging</div>
                            </div>
                        </div>
                    </div>
                </div>
        
        </div>
    
    


        <script>
            // Fetch the learner status when the page loads
            window.addEventListener('DOMContentLoaded', async () => {
                try {
                    // Fetch learner status
                    const statusResponse = await fetch('<%= ingress_path %>/api/learner/status');
                    const statusData = await statusResponse.json();
                    
                    updateLearnerStatus(statusData.active);
                    updateDbStatus(statusData.db_connected);
                    
                    if (statusData.current_system_state) {
                        updateSystemState(statusData.current_system_state);
                    }
                    
                    // Fetch grid charge changes
                    const gridResponse = await fetch('<%= ingress_path %>/api/grid-charge-changes');
                    const gridData = await gridResponse.json();
                    updateGridChargeChanges(gridData);
                    
                    // Fetch energy pattern changes
                    const energyResponse = await fetch('<%= ingress_path %>/api/energy-pattern-changes');
                    const energyData = await energyResponse.json();
                    updateEnergyPatternChanges(energyData);
                    
                    // Fetch voltage point changes
                    const voltageResponse = await fetch('<%= ingress_path %>/api/voltage-point-changes');
                    const voltageData = await voltageResponse.json();
                    updateVoltagePointChanges(voltageData);
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            });
            
            // Toggle learner mode
            document.getElementById('toggleLearner').addEventListener('click', async () => {
                try {
                    const response = await fetch('<%= ingress_path %>/api/learner/toggle', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    updateLearnerStatus(data.active);
                } catch (error) {
                    console.error('Error toggling learner mode:', error);
                }
            });
            
            // Update learner status UI
            function updateLearnerStatus(active) {
                const statusElement = document.getElementById('learnerStatus');
                const buttonTextElement = document.getElementById('learnerButtonText');
                
                if (active) {
                    statusElement.className = 'status-pill active';
                    statusElement.innerHTML = '<i class="fas fa-brain"></i> Learning Mode Active';
                    buttonTextElement.textContent = 'Turn Off Learning Mode';
                } else {
                    statusElement.className = 'status-pill inactive';
                    statusElement.innerHTML = '<i class="fas fa-brain"></i> Learning Mode Inactive';
                    buttonTextElement.textContent = 'Turn On Learning Mode';
                }
            }
            
            // Update database status UI
            function updateDbStatus(connected) {
                const dbStatusElement = document.getElementById('dbStatus');
                
                if (connected) {
                    dbStatusElement.innerHTML = '<i class="fas fa-database"></i> Database Connected';
                    dbStatusElement.style.color = 'var(--secondary)';
                } else {
                    dbStatusElement.innerHTML = '<i class="fas fa-database"></i> Database Disconnected';
                    dbStatusElement.style.color = 'var(--danger)';
                }
            }
            
            // Update system state UI
            function updateSystemState(state) {
                document.getElementById('batterySOC').textContent = state.battery_soc ? `${state.battery_soc}%` : 'N/A';
                document.getElementById('pvPower').textContent = state.pv_power ? `${state.pv_power} W` : 'N/A';
                document.getElementById('load').textContent = state.load ? `${state.load} W` : 'N/A';
                document.getElementById('gridVoltage').textContent = state.grid_voltage ? `${state.grid_voltage} V` : 'N/A';
                document.getElementById('gridPower').textContent = state.grid_power ? `${state.grid_power} W` : 'N/A';
                document.getElementById('inverterState').textContent = state.inverter_state || 'N/A';
                document.getElementById('systemStateTime').textContent = `Updated: ${state.timestamp || 'N/A'}`;
                
                // Update classes based on values
                if (state.battery_soc) {
                    const batteryElement = document.getElementById('batterySOC');
                    if (state.battery_soc > 80) {
                        batteryElement.className = 'state-value high';
                    } else if (state.battery_soc > 30) {
                        batteryElement.className = 'state-value medium';
                    } else {
                        batteryElement.className = 'state-value low';
                    }
                }
                
                if (state.grid_power) {
                    const gridPowerElement = document.getElementById('gridPower');
                    if (state.grid_power < 0) {
                        gridPowerElement.className = 'state-value high';  // Exporting power
                    } else if (state.grid_power > 1000) {
                        gridPowerElement.className = 'state-value low';   // Importing significant power
                    } else {
                        gridPowerElement.className = 'state-value medium';
                    }
                }
            }
            
            // Update grid charge changes UI
            function updateGridChargeChanges(changes) {
                document.getElementById('gridChangeCount').textContent = changes.length;
                
                if (changes.length > 0) {
                    const lastChange = changes[0];
                    document.getElementById('lastGridChange').textContent = formatTimestamp(lastChange.timestamp);
                    
                    const tableBody = document.getElementById('gridChangesTable').getElementsByTagName('tbody')[0];
                    tableBody.innerHTML = '';
                    
                    // Show up to 5 most recent changes
                    const recentChanges = changes.slice(0, 5);
                    
                    recentChanges.forEach(change => {
                        const row = tableBody.insertRow();
                        const timeCell = row.insertCell(0);
                        const topicCell = row.insertCell(1);
                        const oldValueCell = row.insertCell(2);
                        const newValueCell = row.insertCell(3);
                        
                        timeCell.textContent = formatTime(change.timestamp);
                        topicCell.textContent = change.topic || 'N/A';
                        oldValueCell.textContent = change.old_value || 'N/A';
                        newValueCell.textContent = change.new_value || 'N/A';
                    });
                }
            }
            
            // Update energy pattern changes UI
            function updateEnergyPatternChanges(changes) {
                document.getElementById('energyChangeCount').textContent = changes.length;
                
                if (changes.length > 0) {
                    const lastChange = changes[0];
                    document.getElementById('lastEnergyChange').textContent = formatTimestamp(lastChange.timestamp);
                    
                    const tableBody = document.getElementById('energyChangesTable').getElementsByTagName('tbody')[0];
                    tableBody.innerHTML = '';
                    
                    // Show up to 5 most recent changes
                    const recentChanges = changes.slice(0, 5);
                    
                    recentChanges.forEach(change => {
                        const row = tableBody.insertRow();
                        const timeCell = row.insertCell(0);
                        const topicCell = row.insertCell(1);
                        const oldValueCell = row.insertCell(2);
                        const newValueCell = row.insertCell(3);
                        
                        timeCell.textContent = formatTime(change.timestamp);
                        topicCell.textContent = change.topic || 'N/A';
                        oldValueCell.textContent = change.old_value || 'N/A';
                        newValueCell.textContent = change.new_value || 'N/A';
                    });
                }
            }
            
            // Update voltage point changes UI
            function updateVoltagePointChanges(changes) {
                document.getElementById('voltageChangeCount').textContent = changes.length;
                
                if (changes.length > 0) {
                    const lastChange = changes[0];
                    document.getElementById('lastVoltageChange').textContent = formatTimestamp(lastChange.timestamp);
                    
                    const tableBody = document.getElementById('voltageChangesTable').getElementsByTagName('tbody')[0];
                    tableBody.innerHTML = '';
                    
                    // Show up to 5 most recent changes
                    const recentChanges = changes.slice(0, 5);
                    
                    recentChanges.forEach(change => {
                        const row = tableBody.insertRow();
                        const timeCell = row.insertCell(0);
                        const topicCell = row.insertCell(1);
                        const oldValueCell = row.insertCell(2);
                        const newValueCell = row.insertCell(3);
                        
                        timeCell.textContent = formatTime(change.timestamp);
                        topicCell.textContent = change.topic || 'N/A';
                        oldValueCell.textContent = change.old_value || 'N/A';
                        newValueCell.textContent = change.new_value || 'N/A';
                    });
                }
            }
            
            // Format timestamp to YYYY-MM-DD HH:MM:SS
            function formatTimestamp(timestamp) {
                const date = new Date(timestamp);
                return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;
            }
            
            // Format timestamp to HH:MM:SS
            function formatTime(timestamp) {
                const date = new Date(timestamp);
                return `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;
            }
            
            // Pad numbers with leading zero
            function pad(number) {
                return number < 10 ? '0' + number : number;
            }
            
            // Polling function to update data regularly
            function startPolling() {
                setInterval(async () => {
                    try {
                        const statusResponse = await fetch('<%= ingress_path %>/api/learner/status');
                        const statusData = await statusResponse.json();
                        
                        if (statusData.current_system_state) {
                            updateSystemState(statusData.current_system_state);
                        }
                    } catch (error) {
                        console.error('Error polling status:', error);
                    }
                }, 5000); // Poll every 5 seconds
            }
            
            // Start polling
            startPolling();
          </script>

<script src="<%= ingress_path %>/js/loading.js"></script>
<script src="<%= ingress_path %>/js/dark-mode.js"></script>
<script src="<%= ingress_path %>/js/mobile.js"></script>



</body>
</html>
