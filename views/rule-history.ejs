<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carbonoz SolarAutopilot</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
      body {
       font-family: 'Inter', sans-serif;
       background: var(--bg-color);
     }
     body.dark-mode { background-color: rgba(24, 27, 31, 1); color: #f5f6fa; }
     :root {
         --primary-color: #DEAF0B;
         --bg-color: #f5f6fa;
         --text-color: #2f3640;
         --icon-color: #636e72;
         --green: #4CAF50;
         --red: #F44336;
         --blue: #2196F3;
         --amber: #FFC107;
         --gray: #757575;
        }
        
        body, html {
         font-family: Arial, sans-serif;
         margin: 0;
         padding: 0;
         height: 100%;
         
        }
         /* Sidebar styles */
         .sidebar {
             width: 280px;
             height: 100vh;
             background-color: white;
             border-right: 1px solid #e5e7eb;
             display: flex;
             flex-direction: column;
             position: fixed;
             top: 0;
             left: 0;
             z-index: 1000;
             transition: width 0.3s ease;
         }
        
                .logo-container {
                    padding: 1.5rem;
                    border-bottom: 1px solid #e5e7eb;
                    display: flex;
                    align-items: center;
                    gap: 0.75rem;
                }
        
                .logo-icon {
         width: 50px;
         height: 50px;
         border-radius: 8px;
         display: flex;
         justify-content: center;
         align-items: center;
         color: white;
         font-weight: bold;
         font-size: 20px;
        }
        
        .logo-text {
         margin-left: 10px;
         font-weight: bold;
         color: var(--text-color);
         font-size: 18px;
        }
        
        .logo-text .highlight {
         color: var(--primary-color);
         margin-left: 10px;
        }
        
        
        nav {
         flex-grow: 1;
        }
        
        nav ul {
         list-style-type: none;
         padding: 0;
         margin: 0;
        }
        nav li {
         padding: 15px 20px;
         display: flex;
         align-items: center;
         color: var(--text-color);
         cursor: pointer;
         transition: background-color 0.3s;
         font-size: 18px;
        }
        
        nav li a{
         text-decoration: none;
         color: #2f3640;
         font-weight: bold;
        }
        nav li:hover {
         background-color: var(--bg-color);
        }
        
        nav li i {
         margin-right: 15px;
         color: var(--icon-color);
         font-size: 24px;
        }
        
        .bottom-options {
         padding: 20px;
         border-top: 1px solid #dcdde1;
        }
        
        .toggle-sidebar {
         display: flex;
         align-items: center;
         justify-content: space-between;
         cursor: pointer;
         font-size: 16px;
        }
        
        .toggle-text {
         margin-right: 10px;
        }
        
        .toggle-switch {
         width: 50px;
         height: 25px;
         background-color: #dcdde1;
         border-radius: 12.5px;
         position: relative;
         transition: background-color 0.3s;
        }
        .toggle-switch::before {
         content: '';
         position: absolute;
         width: 21px;
         height: 21px;
         border-radius: 50%;
         background-color: white;
         top: 2px;
         left: 2px;
         transition: transform 0.3s;
        }
        
        .toggle-switch.active {
         background-color: var(--primary-color);
        }
        
        .toggle-switch.active::before {
         transform: translateX(25px);
        }
        
        .sidebar.collapsed .logo-text,
        .sidebar.collapsed .search,
        .sidebar.collapsed nav li span,
        .sidebar.collapsed .toggle-text {
         display: none;
        }
        
        .sidebar.collapsed .logo {
         justify-content: center;
        }
        
        .sidebar.collapsed nav li {
         justify-content: center;
        }
        
        .sidebar.collapsed nav li i {
         margin-right: 0;
        }
                /* Main content styles */
                .main-content {
                    flex: 1;
                    margin-left: 280px;
                    padding: 2rem;
                }
        
                .content-header {
                    margin-bottom: 2rem;
                }
        
                .content-header h2 {
                    font-size: 1.875rem;
                    font-weight: 700;
                    color: #111827;
                }
        
                .metrics-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
                    gap: 1.5rem;
                    margin-bottom: 2rem;
                }
        
                .metric-card {
                    background: white;
                    border-radius: 12px;
                    padding: 1.5rem;
                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                }
        
                .metric-title {
                    font-size: 0.875rem;
                    font-weight: 600;
                    color: #4b5563;
                    margin-bottom: 0.5rem;
                }
        
                .metric-value {
                    font-size: 1.5rem;
                    font-weight: 700;
                    margin-bottom: 0.25rem;
                }
        
                .metric-subtitle {
                    font-size: 0.875rem;
                    color: #6b7280;
                }
        
                .chart-container {
                    background: white;
                    border-radius: 12px;
                    padding: 1.5rem;
                    margin-bottom: 2rem;
                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                }
        
                .chart-wrapper {
                    height: 400px;
                    margin-top: 1rem;
                }
        
                .period-buttons {
                    display: flex;
                    gap: 0.75rem;
                    margin-bottom: 1rem;
                }
        
                .period-btn {
                    padding: 0.5rem 1rem;
                    border: none;
                    background-color: #e5e7eb;
                    color: #4b5563;
                    border-radius: 6px;
                    cursor: pointer;
                    font-weight: 500;
                    transition: all 0.2s;
                }
        
                .period-btn:hover {
                    background-color: #d1d5db;
                }
        
                .period-btn.active {
                    background-color: #DEAF0B;
                    color: white;
                }
        
                /* Toggle styles */
                .toggle {
                    position: relative;
                    display: inline-block;
                    width: 44px;
                    height: 24px;
                }
        
                .toggle input {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
        
                .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: #e5e7eb;
                    transition: .4s;
                    border-radius: 34px;
                }
        
                .slider:before {
                    position: absolute;
                    content: "";
                    height: 16px;
                    width: 16px;
                    left: 4px;
                    bottom: 4px;
                    background-color: white;
                    transition: .4s;
                    border-radius: 50%;
                }
        
                input:checked + .slider {
                    background-color: #DEAF0B;
                }
        
                input:checked + .slider:before {
                    transform: translateX(20px);
                }
        
                /* Updated and new styles */
                .bottom-controls {
                    padding: 1.5rem;
                    border-top: 1px solid #e5e7eb;
                }
        
                .control-item {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 1rem;
                }
        
                .control-label {
                    font-size: 0.875rem;
                    color: #4b5563;
                }
        
                .toggle {
                    position: relative;
                    display: inline-block;
                    width: 44px;
                    height: 24px;
                }
        
                .toggle input {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
        
                .sidebar {
         width: 280px;
         background-color: white;
         box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
         display: flex;
         flex-direction: column;
         transition: width 0.3s ease;
         z-index: 10;
        }
        
        .sidebar.collapsed {
         width: 80px;
        }
        
        .logo {
         display: flex;
         align-items: center;
         padding: 20px;
        }
        
        
                input:checked + .slider {
                    background-color: #DEAF0B;
                }
        
                input:checked + .slider:before {
                    transform: translateX(20px);
                }
        
                .total-emissions {
                    font-size: 1.25rem;
                    font-weight: 600;
                    margin-bottom: 1rem;
                    color: #374151;
                }
        
                .summary-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                    gap: 1rem;
                    margin-bottom: 2rem;
                }
        
                .summary-item {
                    background-color: white;
                    border-radius: 8px;
                    padding: 1rem;
                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                }
        
                .summary-label {
                    font-size: 0.875rem;
                    color: #6b7280;
                    display: block;
                    margin-bottom: 0.5rem;
                }
        
                .summary-value {
                    font-size: 1.25rem;
                    font-weight: 600;
                }
        
            
        
                /* Responsive styles */
                @media (max-width: 768px) {
                    .sidebar {
                        width: 100%;
                        height: auto;
                        position: static;
                        border-right: none;
                        border-bottom: 1px solid #e5e7eb;
                    }
        
                    .main-content {
                        margin-left: 0;
                    }
        
                    body.collapsed-sidebar .sidebar {
                        display: none;
                    }
        
                    body.collapsed-sidebar .main-content {
                        margin-left: 0;
                    }
        
                    .metrics-grid,
                    .summary-grid {
                        grid-template-columns: 1fr;
                    }
        
                    .period-buttons {
                        flex-wrap: wrap;
                    }
        
                    .period-btn {
                        flex: 1 0 calc(50% - 0.375rem);
                        margin-bottom: 0.75rem;
                    }
                }
     
     /* loading css */
     
     .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #f8f9fa;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
     }
     
     .loading-spinner {
      width: 50px;
      height: 50px;
      border: 5px solid #e0e0e0;
      border-top: 5px solid #3498db;
      border-radius: 50%;
      animation: spin 1s linear infinite;
     }
     
     @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
     }
     
     .dashboard-column {
     flex-basis: calc(33.33333% - 2px);
     margin-right: 2px;
     margin-bottom: 2px;
     }
     
     @media only screen and (max-width: 128em) {
     .dashboard-column {
      flex-basis: calc(50% - 2px);
     }
     }
     
     @media only screen and (max-width: 62em) {
     .dashboard-column {
      flex-basis: calc(100% - 2px);
     }
     }
     
     .dashboard-column .card {
     border: 0;
     }
     
     
     
     .dark-mode .main-content{
         background-color: rgba(24, 27, 31, 1);
         color: #f5f6fa;
     }
     
     .dark-mode .sidebar {
         background-color: rgba(24, 27, 31, 1);
     }
     
     .dark-mode .sidebar .logo-icon {
      color: #2f3640;
     }
     
     .dark-mode .sidebar .logo-text {
      color: #f5f6fa;
     }
     
     .dark-mode .sidebar nav li {
      color: #f5f6fa;
     }
     
     .dark-mode .sidebar nav li:hover {
      background-color: #383838;
     }
     
     .dark-mode .sidebar nav li a {
      color: #f5f6fa;
     }
     
     .dark-mode .sidebar nav li i {
      color: #dcdde1;
     }
     
     .dark-mode .toggle-sidebar,
     .dark-mode .toggle-dark-mode {
      color: #f5f6fa;
     }
     
     .dark-mode .toggle-switch {
         background-color: var(--primary-color);
     }
     
     .dark-mode .toggle-switch.active {
      background-color: var(--primary-color);
     }
     
     .dark-mode header {
         background-color: rgb(17, 18, 23);
     }
     
     .dark-mode .content-card {
         background-color: rgba(24, 27, 31, 1);
      color: #fff;
     }
     
     
     .dark-mode .loading-overlay{
         background-color: rgba(24, 27, 31, 1);
     }
     
     /* Mobile Sidebar Improvements */
     @media (max-width: 768px) {
         /* Sidebar base styles */
         .sidebar {
             position: fixed;
             top: 0;
             left: 0;
             height: 100vh;
             width: 280px;
             transform: translateX(-100%);
             transition: transform 0.3s ease-in-out;
             z-index: 1000;
             overflow-y: auto;
             -webkit-overflow-scrolling: touch;
             box-shadow: none;
         }
     
         .sidebar.active {
             transform: translateX(0);
             box-shadow: 2px 0 12px rgba(0, 0, 0, 0.15);
         }
     
         /* Improved hamburger button */
         .mobile-toggle {
             display: block;
             position: fixed;
             top: 1rem;
             left: 1rem;
             z-index: 1001;
             background: none;
             border: none;
             cursor: pointer;
             width: 40px;
             height: 40px;
             border-radius: 50%;
             background-color: white;
             box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
             padding: 8px;
         }
     
         .mobile-toggle span {
             display: block;
             width: 24px;
             height: 2px;
             background-color: var(--text-color);
             margin: 5px auto;
             transition: transform 0.3s ease, opacity 0.3s ease;
         }
     
         .mobile-toggle.active span:nth-child(1) {
             transform: translateY(7px) rotate(45deg);
         }
     
         .mobile-toggle.active span:nth-child(2) {
             opacity: 0;
         }
     
         .mobile-toggle.active span:nth-child(3) {
             transform: translateY(-7px) rotate(-45deg);
         }
     
         /* Improved nav items */
         .sidebar nav ul {
             padding: 1rem 0;
         }
     
         .sidebar nav li {
             padding: 0.875rem 1.5rem;
             margin: 0.25rem 1rem;
             border-radius: 8px;
             transition: background-color 0.2s ease;
         }
     
         .sidebar nav li a {
             display: flex;
             align-items: center;
             gap: 1rem;
             font-size: 1rem;
             color: var(--text-color);
         }
     
         .sidebar nav li i {
             font-size: 1.25rem;
             min-width: 24px;
             text-align: center;
         }
     
         .sidebar nav li:active {
             background-color: rgba(0, 0, 0, 0.05);
         }
     
         /* Improved overlay */
         .sidebar-overlay {
             display: none;
             position: fixed;
             top: 0;
             left: 0;
             right: 0;
             bottom: 0;
             background-color: rgba(0, 0, 0, 0.4);
             backdrop-filter: blur(2px);
             z-index: 999;
             opacity: 0;
             transition: opacity 0.3s ease;
         }
     
         .sidebar-overlay.active {
             display: block;
             opacity: 1;
         }
     
         /* Dark mode adjustments */
         .dark-mode .mobile-toggle {
             background-color: rgba(255, 255, 255, 0.1);
         }
     
         .dark-mode .mobile-toggle span {
             background-color: #f5f6fa;
         }
     
         .dark-mode .sidebar nav li:active {
             background-color: rgba(255, 255, 255, 0.05);
         }
     }
     
     /* Ensure main content adjusts properly */
     @media (max-width: 768px) {
         .main-content {
             margin-left: 0;
             padding-top: 4.5rem;
             transition: margin-left 0.3s ease;
         }
     
         body.sidebar-open .main-content {
             filter: blur(2px);
             pointer-events: none;
         }
     }
     /* Main content base styling */
     .main-content {
       flex: 1;
       margin-left: 280px;
       padding: 2rem;
       color: var(--text-color);
       transition: margin-left 0.3s ease;
     }
     
     .main-content .container {
       max-width: 1200px;
       margin: 0 auto;
       padding: 0;
     }
     
     .main-content .d-flex.flex-wrap.justify-content-center.gap-3 {
       display: flex;
       flex-wrap: nowrap !important;
       overflow-x: auto;
       white-space: nowrap;
       gap: 0.75rem;
       padding: 0.75rem;
       margin-bottom: 1.5rem;
       scrollbar-width: thin;
       -webkit-overflow-scrolling: touch;
       background-color: #f8f9fa;
       border-radius: 8px;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
     }
     
     .main-content .d-flex.flex-wrap.justify-content-center.gap-3::-webkit-scrollbar {
       height: 6px;
     }
     
     .main-content .d-flex.flex-wrap.justify-content-center.gap-3::-webkit-scrollbar-track {
       background: #f1f1f1;
       border-radius: 4px;
     }
     
     .main-content .d-flex.flex-wrap.justify-content-center.gap-3::-webkit-scrollbar-thumb {
       background: #c1c1c1;
       border-radius: 4px;
     }
     
     .main-content .d-flex.flex-wrap.justify-content-center.gap-3::-webkit-scrollbar-thumb:hover {
       background: #a8a8a8;
     }
     
     .main-content .nav-link {
       display: inline-flex;
       align-items: center;
       white-space: nowrap;
       padding: 0.5rem 1rem;
       color: #4b5563;
       font-weight: 500;
       border-radius: 6px;
       text-decoration: none;
       transition: all 0.2s ease;
       flex-shrink: 0;
     }
     
     .main-content .nav-link:hover {
       background-color: #e9ecef;
       color: #000;
     }
     
     .main-content .nav-link.active {
       color: #fff;
     }
     
     .main-content .nav-link i,
     .main-content .nav-link svg {
       margin-right: 0.5rem;
       font-size: 1rem;
     }
     
     /* Enhanced card styling with glass morphism effect */
     .main-content .card {
       border: none;
       border-radius: 16px;
       box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05), 0 6px 6px rgba(0, 0, 0, 0.06);
       transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
       margin-bottom: 1.5rem;
       overflow: hidden;
       backdrop-filter: blur(5px);
       background-color: rgba(255, 255, 255, 0.9);
     }
     
     .main-content .card:hover {
       transform: translateY(-5px);
       box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1), 0 10px 10px rgba(0, 0, 0, 0.08);
     }
     
     /* Stats Card Styles */
     .stats-card-container {
         display: flex;
         flex-wrap: wrap;
         gap: 1.5rem;
         margin-bottom: 2rem;
     }
     
     .stats-card {
         flex: 1;
         min-width: 200px;
         background: white;
         border-radius: 16px;
         box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
         padding: 1.5rem;
         transition: all 0.3s ease;
         position: relative;
         overflow: hidden;
         display: flex;
         align-items: center;
     }
     
     .main-content a{
       text-decoration: none;
     }
     
     .stats-card:hover {
         transform: translateY(-5px);
         box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
     }
     
     .stats-card-icon {
         width: 64px;
         height: 64px;
         border-radius: 12px;
         display: flex;
         align-items: center;
         justify-content: center;
         margin-right: 1.25rem;
     }
     
     .stats-card-icon i {
         font-size: 1.75rem;
     }
     
     .stats-card-content {
         flex: 1;
     }
     
     .stats-card-title {
         color: #6c757d;
         font-size: 1rem;
         font-weight: 500;
         margin-bottom: 0.25rem;
     }
     
     .stats-card-value {
         font-size: 2rem;
         font-weight: 700;
         color: #343a40;
         margin: 0;
     }
     
     /* Icon Background Colors */
     .stats-card-icon-total-rules {
         background-color: #fff8e1;
     }
     
     .stats-card-icon-total-rules i {
         color: #DEAF0B;
     }
     
     .stats-card-icon-total-executions {
         background-color: #e8f5e9;
     }
     
     .stats-card-icon-total-executions i {
         color: #4CAF50;
     }
     
     .stats-card-icon-last-24h {
         background-color: #e3f2fd;
     }
     
     .stats-card-icon-last-24h i {
         color: #2196F3;
     }
     
     .stats-card-icon-most-active {
         background-color: #fff3e0;
     }
     
     .stats-card-icon-most-active i {
         color: #FF9800;
     }
     
     /* Responsive adjustments */
     @media (max-width: 991.98px) {
         .stats-card-container {
             gap: 1rem;
         }
         
         .stats-card {
             min-width: calc(50% - 1rem);
             padding: 1.25rem;
         }
     }
     
     @media (max-width: 767.98px) {
         .stats-card-icon {
             width: 56px;
             height: 56px;
             margin-right: 1rem;
         }
         
         .stats-card-icon i {
             font-size: 1.5rem;
         }
         
         .stats-card-title {
             font-size: 0.9rem;
         }
         
         .stats-card-value {
             font-size: 1.75rem;
         }
     }
     
     @media (max-width: 575.98px) {
         .stats-card {
             min-width: 100%;
         }
     }
     
     /* Dark mode styles */
     .dark-mode .stats-card {
       background-color: rgb(32, 36, 41);
       color: #f5f6fa;
     }
     
     .dark-mode .stats-card-title {
         color: #b0b0b0;
     }
     
     .dark-mode .stats-card-value {
         color: #f5f6fa;
     }
     
     .dark-mode .stats-card-icon-total-rules {
         background-color: rgba(222, 175, 11, 0.15);
     }
     
     .dark-mode .stats-card-icon-total-executions {
         background-color: rgba(76, 175, 80, 0.15);
     }
     
     .dark-mode .stats-card-icon-last-24h {
         background-color: rgba(33, 150, 243, 0.15);
     }
     
     .dark-mode .stats-card-icon-most-active {
         background-color: rgba(255, 152, 0, 0.15);
     }
     
     .main-content .card-header {
       background: linear-gradient(135deg, #DEAF0B, #D4A004);
       color: white;
       font-weight: 600;
       padding: 1.25rem 1.75rem;
       border-bottom: none;
       display: flex;
       justify-content: space-between;
       align-items: center;
       border-radius: 16px 16px 0 0;
       font-size: 25px;
     }
     
     .main-content .card-body {
       padding: 1.75rem;
       position: relative;
     }
     
     
     
     /* Rule item styling - solid background and no animations */
     .main-content .rule-item {
       background: white;
       padding: 1.25rem;
       border-radius: 8px;
       margin-bottom: 1rem;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
       cursor: pointer;
       border-left: 4px solid #DEAF0B;
     }
     
     .main-content .rule-item:hover {
       background-color: #f9f9f9;
     }
     
     .main-content .rule-item::after {
       display: none;
     }
     
     .main-content .rule-item .setting-title {
       font-size: 1.1rem;
       font-weight: 600;
       color: #333;
     }
     
     .main-content .rule-item .timestamp {
       color: #777;
       font-size: 0.9rem;
     }
     
     .main-content .rule-item .edit-icon {
       color: #DEAF0B;
     }
     
     .main-content .rule-item .setting-title {
       font-size: 1.1rem;
       font-weight: 600;
       color: #333;
     }
     
     .main-content .rule-item .timestamp {
       color: #777;
       font-size: 0.9rem;
     }
     
     .main-content .badge {
       padding: 0.5rem 0.8rem;
       font-weight: 500;
       border-radius: 6px;
     }
     
     /* Stats cards styling with improved design */
     .main-content .row.mb-4 .col-md-3 .card {
       background: linear-gradient(45deg, rgba(255,255,255,0.8), rgba(255,255,255,0.6));
       border-radius: 16px;
       box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
       transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
       border: 1px solid rgba(255,255,255,0.4);
       position: relative;
       overflow: hidden;
       z-index: 1;
     }
     
     /* Custom collapsible sections */
     .collapsible-section {
       margin-bottom: 1.5rem;
     }
     
     .collapsible-header {
       background-color: #f8f9fa;
       padding: 1rem 1.5rem;
       border-radius: 10px;
       cursor: pointer;
       display: flex;
       justify-content: space-between;
       align-items: center;
       transition: all 0.3s ease;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
     }
     
     .collapsible-header:hover {
       background-color: #f0f0f0;
     }
     
     .collapsible-header h5 {
       margin: 0;
       font-weight: 600;
       display: flex;
       align-items: center;
     }
     
     .collapsible-header h5 i {
       margin-right: 0.75rem;
       color: #DEAF0B;
     }
     
     .collapsible-header .toggle-icon {
       transition: transform 0.3s ease;
     }
     
     .collapsible-header.active .toggle-icon {
       transform: rotate(180deg);
     }
     
     .collapsible-content {
       max-height: 0;
       overflow: hidden;
       transition: max-height 0.3s ease;
       padding: 0 1rem;
     }
     
     .collapsible-content.active {
       max-height: 2000px;
       padding: 1.5rem;
     }
     
     .main-content .row.mb-4 .col-md-3 .card::before {
       content: '';
       position: absolute;
       top: 0;
       right: 0;
       width: 100px;
       height: 100px;
       background: radial-gradient(circle, rgba(222,175,11,0.3) 0%, rgba(255,255,255,0) 70%);
       border-radius: 50%;
       z-index: -1;
       transform: translate(30%, -30%);
       transition: all 0.4s ease;
     }
     
     .main-content .row.mb-4 .col-md-3 .card:hover {
       transform: translateY(-8px) scale(1.02);
       box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);
     }
     
     .main-content .row.mb-4 .col-md-3 .card:hover::before {
       transform: translate(20%, -20%) scale(1.2);
     }
     
     .main-content .row.mb-4 .col-md-3 .card .card-body {
       padding: 1.25rem;
       text-align: center;
     }
     
     .main-content .card-title {
       color: #555;
       font-weight: 600;
       font-size: 0.95rem;
       margin-bottom: 0.5rem;
     }
     
     .main-content .row.mb-4 .col-md-3 .card h3 {
       font-size: 1.75rem;
       font-weight: 700;
       color: #DEAF0B;
       margin-bottom: 0;
     }
     
     /* Buttons styling */
     .main-content .btn {
       border-radius: 8px;
       padding: 0.5rem 1.25rem;
       font-weight: 500;
       transition: all 0.2s ease;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
     }
     
     .main-content .btn-primary {
       background-color: #DEAF0B;
       border-color: #DEAF0B;
     }
     
     .main-content .btn-primary:hover {
       background-color: #c59c09;
       border-color: #c59c09;
       transform: translateY(-2px);
       box-shadow: 0 3px 8px rgba(222, 175, 11, 0.3);
     }
     
     .main-content .btn-secondaryy {
       background-color: #f0f0f0;
       color: #555;
       border: none;
     }
     
     .main-content .btn-secondaryy:hover {
       background-color: #e5e5e5;
       transform: translateY(-2px);
       box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
     }
     
     .main-content .btn-successs {
       background-color: #28a745;
       color: white;
       border: none;
     }
     
     .main-content .btn-successs:hover {
       background-color: #218838;
       transform: translateY(-2px);
       box-shadow: 0 3px 8px rgba(40, 167, 69, 0.3);
     }
     
     /* Alert styling without animations */
     .main-content .alert {
       border-radius: 8px;
       border: none;
       padding: 1rem 1.25rem;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
       margin-bottom: 1.5rem;
     }
     
     .alert.alert-dismissible .btn-close {
       padding: 0.75rem;
     }
     
     .main-content .alert-info {
       background-color: #e6f3fb;
       color: #2980b9;
     }
     
     .main-content .alert-success {
       background-color: #e6f9f1;
       color: #27ae60;
     }
     
     .main-content .alert-warning {
       background-color: #fef8e7;
       color: #f39c12;
     }
     
     .main-content .alert-danger {
       background-color: #fceae8;
       color: #c0392b;
     }
     
     #alerts-container {
       position: fixed;
       top: 1.5rem;
       right: 1.5rem;
       z-index: 1100;
       width: 350px;
       max-width: 90%;
     }
     
     /* Pagination styling */
     .pagination-container {
       display: flex;
       justify-content: space-between;
       align-items: center;
       margin-top: 2rem;
       padding: 1rem;
       background: rgba(255, 255, 255, 0.8);
       border-radius: 12px;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
       backdrop-filter: blur(10px);
       transition: all 0.3s ease;
     }
     
     .pagination-container:hover {
       box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
     }
     
     .pagination-info {
       font-size: 0.9rem;
       color: #6c757d;
       font-weight: 500;
     }
     
     .pagination {
       display: flex;
       list-style: none;
       padding: 0;
       margin: 0;
       gap: 0.5rem;
     }
     
     .pagination .page-item .page-link {
       display: flex;
       align-items: center;
       justify-content: center;
       width: 40px;
       height: 40px;
       border-radius: 10px;
       border: none;
       background: white;
       color: #555;
       font-weight: 600;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
       transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
     }
     
     .pagination .page-item .page-link:hover:not(.disabled) {
       transform: translateY(-3px);
       background-color: rgba(222, 175, 11, 0.1);
       color: #DEAF0B;
       box-shadow: 0 5px 15px rgba(222, 175, 11, 0.2);
     }
     
     .pagination .page-item.active .page-link {
       background: linear-gradient(135deg, #DEAF0B, #D4A004);
       color: white;
       box-shadow: 0 5px 15px rgba(222, 175, 11, 0.3);
     }
     
     .pagination .page-item.disabled .page-link {
       background-color: #f5f5f5;
       color: #ccc;
       cursor: not-allowed;
       box-shadow: none;
     }
     
     /* Navigation buttons with subtle arrow animations */
     .pagination .page-item:first-child .page-link,
     .pagination .page-item:last-child .page-link {
       width: 40px;
       background-color: #f8f9fa;
     }
     
     .pagination .page-item:first-child .page-link span,
     .pagination .page-item:last-child .page-link span {
       transition: transform 0.3s ease;
     }
     
     .pagination .page-item:first-child .page-link:hover span {
       transform: translateX(-3px);
     }
     
     .pagination .page-item:last-child .page-link:hover span {
       transform: translateX(3px);
     }
     
     /* Dark mode styles */
     .dark-mode .pagination-container {
       background: rgba(42, 47, 56, 0.8);
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
     }
     
     .dark-mode .pagination-info {
       color: #b0b0b0;
     }
     
     .dark-mode .pagination .page-item .page-link {
       background-color: #32394a;
       color: #e2e2e2;
       box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
     }
     
     .dark-mode .pagination .page-item .page-link:hover:not(.disabled) {
       background-color: rgba(222, 175, 11, 0.2);
       color: #DEAF0B;
     }
     
     .dark-mode .pagination .page-item.active .page-link {
       background: linear-gradient(135deg, #DEAF0B, #A38408);
     }
     
     .dark-mode .pagination .page-item.disabled .page-link {
       background-color: rgb(32, 36, 41);
       color: #666;
     }
     
     .dark-mode .pagination .page-item:first-child .page-link,
     .dark-mode .pagination .page-item:last-child .page-link {
       background-color: #2a2f38;
     }
     
     /* Responsive styles */
     @media (max-width: 767.98px) {
       .pagination-container {
         flex-direction: column;
         gap: 1rem;
       }
       
       .pagination {
         justify-content: center;
         width: 100%;
       }
       
       .pagination-info {
         text-align: center;
       }
     }
     
     @media (max-width: 575.98px) {
       .pagination .page-item .page-link {
         width: 36px;
         height: 36px;
         font-size: 0.9rem;
       }
     }
     
     /* Custom select styling */
     .main-content .form-select {
       border-radius: 8px;
       padding: 0.5rem 2.25rem 0.5rem 1rem;
       border: 1px solid #e2e2e2;
       background-color: white;
       transition: all 0.2s ease;
       box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
     }
     
     .main-content .form-select:focus {
       border-color: #DEAF0B;
       box-shadow: 0 0 0 0.2rem rgba(222, 175, 11, 0.25);
     }
     
     /* Modal styling - solid background with no animations */
     .modal {
       display: none;
       position: fixed;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0.5);
       z-index: 1050;
       overflow-x: hidden;
       overflow-y: auto;
     }
     
     .modal.show, 
     .modal.fade.show {
       display: block;
     }
     
     .modal-dialog {
       margin: 1.75rem auto;
       max-width: 650px;
     }
     
     .modal-content {
       border: none;
       border-radius: 10px;
       box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
       overflow: hidden;
       background-color: white;
     }
     
     .modal-header {
       background-color: #DEAF0B;
       color: white;
       border-bottom: none;
       padding: 1.25rem 1.5rem;
     }
     
     .modal-body {
       padding: 1.5rem;
       background-color: white;
       max-height: 70vh;
       overflow-y: auto;
     }
     
     .modal-footer {
       padding: 1.25rem 1.5rem;
       border-top: 1px solid #eee;
       background-color: white;
     }
     
     #rule-details-loading, 
     #rule-details-content {
       transition: none;
     }
     
     #rule-details-loading.hidden,
     #rule-details-content.hidden {
       display: none;
     }
     
     #rule-details-loading.visible,
     #rule-details-content.visible {
       display: block;
     }
     
     /* Loading spinner enhancement */
     .spinner-border {
       color: #DEAF0B !important;
     }
     
     /* Responsive adjustments */
     @media (max-width: 991.98px) {
       .main-content {
         padding: 1.5rem;
       }
       
       .main-content .row.mb-4 {
         flex-wrap: wrap;
       }
       
       .main-content .row.mb-4 .col-md-3 {
         flex: 1 0 calc(50% - 0.75rem);
         margin-bottom: 1.5rem;
       }
     }
     
     @media (max-width: 767.98px) {
       .main-content {
         padding: 1rem;
       }
       
       .main-content .row.mb-4 .col-md-3 {
         flex: 1 0 100%;
       }
     }
     
     @media (max-width: 575.98px) {
       .main-content .card-header {
         flex-direction: column;
         align-items: flex-start;
       }
       
       .main-content .card-header > div {
         margin-top: 1rem;
         width: 100%;
       }
       
       .main-content .card-header .btn {
         width: 100%;
         margin-bottom: 0.5rem;
       }
       
       .main-content .form-select {
         width: 100% !important;
       }
       
       .modal-dialog {
         margin: 0.5rem;
       }
     }
     
     .dark-mode body{
       background-color: rgba(24, 27, 31, 1);
     }
     
     /* Dark mode styles for horizontal stat cards */
     .dark-mode .main-content {
       background-color: rgba(24, 27, 31, 1);
       color: #f5f6fa;
     }
     
     .dark-mode .main-content .row.mb-4 .col-md-3 .card {
       background-color: rgb(32, 36, 41);
       box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
     }
     
     .dark-mode .main-content .row.mb-4 .col-md-3 .card .card-body {
       color: #f5f6fa;
     }
     
     .dark-mode .main-content .card-title {
       color: #ccc;
     }
     
     .dark-mode .main-content .row.mb-4 .col-md-3 .card h3 {
       color: #DEAF0B;
     }
     
     .dark-mode .main-content .card-body {
       color: #e2e2e2;
     }
     
     .dark-mode .main-content .nav-link {
       color: #b0b0b0;
     }
     
     .dark-mode .main-content .nav-link:hover {
       background-color: rgba(222, 175, 11, 0.15);
       color: #DEAF0B;
     }
     
     .dark-mode .main-content .nav-link.active {
       background-color: #DEAF0B;
       color: white;
     }
     
     .dark-mode .main-content .d-flex.flex-wrap.justify-content-center.gap-3 {
       background-color: rgb(32, 36, 41);
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
     }
     
     /* Dark mode styles for rule items and modals */
     .dark-mode .main-content .rule-item {
       background-color: rgb(32, 36, 41);
       border-left: 4px solid #DEAF0B;
     }
     
     .dark-mode .main-content .rule-item:hover {
       background-color: rgb(32, 36, 42);
     }
     
     .dark-mode .main-content .rule-item .setting-title {
       color: #f5f6fa;
     }
     
     .dark-mode .main-content .rule-item .timestamp {
       color: #aaa;
     }
     
     .dark-mode .card,
     .dark-mode .card-body,
     .dark-mode .container,
     .dark-mode .main-content {
       background-color: rgb(32, 36, 41);
     }
     
     .dark-mode .modal-content {
       background-color: rgb(32, 36, 41);
       color: #f5f6fa;
     }
     
     .dark-mode .modal-body {
       background-color: rgb(32, 36, 41);
       color: #f5f6fa;
     }
     
     .dark-mode .modal-footer {
       background-color: rgb(32, 36, 41);
       border-top: 1px solid #444;
     }
     
     .dark-mode .card-header {
       background-color: #DEAF0B;
     }
     
     .dark-mode .main-content .rule-item .setting-title {
       color: #f5f6fa;
     }
     
     .dark-mode .main-content .rule-item .timestamp {
       color: #aaa;
     }
     
     .dark-mode .main-content .bg-light {
       background-color: rgb(32, 36, 41) !important;
       box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
     }
     
     .dark-mode .main-content .card-title {
       color: #ccc;
     }
     
     .dark-mode .main-content .text-muted {
       color: #aaa !important;
     }
     
     .dark-mode .main-content .btn-secondaryy {
       background-color: #3d4249;
       color: #ddd;
     }
     
     .dark-mode .main-content .btn-secondaryy:hover {
       background-color: #4d545e;
     }
     
     
     .dark-mode .main-content .alert-success {
       background-color: rgba(46, 204, 113, 0.15);
       color: #6de896;
     }
     
     .dark-mode .main-content .alert-warning {
       background-color: rgba(241, 196, 15, 0.15);
       color: #ffd85e;
     }
     
     .dark-mode .main-content .alert-info {
       background-color: rgba(33, 150, 243, 0.15);
       color: #79c5f5;
     }
     
     .dark-mode .main-content .pagination .page-link {
       background-color: rgb(32, 36, 41);
       color: #ddd;
     }
     
     .dark-mode .main-content .pagination .page-link:hover {
       background-color: #32394a;
       color: #DEAF0B;
     }
     
     .dark-mode .main-content .pagination .page-item.disabled .page-link {
       background-color: rgb(32, 36, 41);
       color: #666;
     }
     
     .dark-mode .main-content .form-select {
       background-color: rgb(32, 36, 41);
       border-color: #3d4249;
       color: #f5f6fa;
     }
     
     .dark-mode .main-content .form-select:focus {
       border-color: #DEAF0B;
       box-shadow: 0 0 0 0.2rem rgba(222, 175, 11, 0.25);
     }
     
     .dark-mode .modal {
       background-color: rgb(32, 36, 41);
     }
     
     .dark-mode .modal-content {
       background-color: rgba(36, 40, 48, 0.95);
       box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
       border: 1px solid rgba(255, 255, 255, 0.08);
       backdrop-filter: blur(15px);
     }
     
     .dark-mode .modal-header {
       background: linear-gradient(135deg, #DEAF0B, #A38408);
     }
     
     .dark-mode .modal-body {
       color: #f5f6fa;
       background-image: 
         radial-gradient(circle at 90% 10%, rgba(222, 175, 11, 0.05) 0%, transparent 30%),
         radial-gradient(circle at 10% 90%, rgba(222, 175, 11, 0.03) 0%, transparent 30%);
     }
     
     .dark-mode .modal-footer {
       color: #f5f6fa;
       border-top: 1px solid rgba(255, 255, 255, 0.08);
       background-color: rgba(30, 34, 40, 0.9);
     }
     
     .dark-mode #rule-details-loading .spinner-border {
       color: #DEAF0B !important;
     }
     
     .dark-mode .form-label {
       color: #ccc;
     }
     
     .dark-mode .form-control-plaintext {
       color: #f5f6fa;
     }
     
     .dark-mode .card.bg-light {
       background-color: rgb(32, 36, 41) !important;
     }
     
     .dark-mode .card.bg-light .card-body {
       color: #f5f6fa;
     }
     
     .dark-mode .card.bg-light h3,
     .dark-mode .card.bg-light h6 {
       color: #f5f6fa;
     }
     
     /* Tablet breakpoint - adjust main content */
     @media (max-width: 991.98px) {
       .main-content {
         padding: 1.25rem;
       }
       
       .stats-card-container {
         grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
       }
       
       .main-content .card-header {
         padding: 1rem 1.25rem;
         flex-direction: column;
         align-items: flex-start;
       }
       
       .main-content .card-header > div {
         margin-top: 0.75rem;
         width: 100%;
         display: flex;
         gap: 0.5rem;
       }
       
       .main-content .card-header .btn,
       .main-content .card-header .form-select {
         flex: 1;
       }
       
       .main-content .card-body {
         padding: 1.25rem;
       }
     }
     
     /* Mobile breakpoint - further adjustments */
     @media (max-width: 767.98px) {
       .main-content {
         margin-left: 0;
         padding: 1rem 0.75rem;
         padding-top: 4rem; /* Space for mobile menu button */
       }
       
       .sidebar.collapsed + .main-content {
         margin-left: 0;
       }
       
       .stats-card-container {
         grid-template-columns: 1fr;
         gap: 0.75rem;
       }
       
       .stats-card {
         min-height: auto;
       }
       
       .main-content .rule-item {
         padding: 0.875rem;
       }
       
       .main-content .rule-item .d-flex {
         flex-direction: column;
         align-items: flex-start !important;
       }
       
       .main-content .rule-item .d-flex > div:last-child {
         margin-top: 0.5rem;
         width: 100%;
         display: flex;
         justify-content: space-between;
       }
       
       .pagination-container {
         margin-top: 1.25rem;
         padding: 0.75rem;
       }
       
       .pagination-info {
         text-align: center;
         width: 100%;
       }
       
       .pagination {
         justify-content: center;
         flex-wrap: wrap;
         gap: 0.25rem;
         width: 100%;
       }
       
       .pagination .page-item .page-link {
         width: 32px;
         height: 32px;
       }
       
       /* Better modal for small screens */
       .modal-dialog {
         margin: 0.25rem;
         max-height: calc(100vh - 0.5rem);
       }
       
       .modal-body {
         max-height: 70vh;
         overflow-y: auto;
         padding: 1rem;
       }
       
       .modal-footer {
         flex-direction: column;
         gap: 0.5rem;
       }
       
       .modal-footer .btn {
         width: 100%;
       }
     }
     
     /* Small mobile adjustments */
     @media (max-width: 575.98px) {
       .main-content {
         padding: 0.75rem 0.5rem;
         padding-top: 4rem;
       }
       
       .main-content .nav-link {
         padding: 0.5rem 0.75rem;
         font-size: 0.8125rem;
       }
       
       .main-content .nav-link i {
         margin-right: 0.25rem;
       }
       
       .modal-header {
         padding: 0.875rem 1rem;
       }
       
       .modal-body {
         padding: 0.75rem;
       }
       
       .modal-footer {
         padding: 0.875rem 1rem;
       }
     }
     
     /* Dark mode adjustments */
     .dark-mode .main-content .d-flex.flex-wrap.justify-content-center.gap-3 {
       background-color: rgba(36, 40, 48, 0.8);
     }
     
     /* Ensure sidebar toggle works correctly with main content */
     .sidebar.collapsed ~ .main-content {
       margin-left: 80px;
     }
     
     @media (max-width: 767.98px) {
       .sidebar.collapsed ~ .main-content {
         margin-left: 0;
       }
       
       .sidebar.active ~ .main-content {
         filter: blur(2px);
         pointer-events: none;
       }
     }
     
     @media (max-width: 767.98px) {
       /* Better button styling for mobile */
       .main-content .btn {
         width: 100%;
         margin-bottom: 0.5rem;
         padding: 0.7rem 1rem;
         font-size: 0.95rem;
         border-radius: 10px;
         display: flex;
         align-items: center;
         justify-content: center;
       }
       
       .main-content .btn i {
         margin-right: 0.5rem;
       }
       
       /* Adjust button width when in a row */
       .main-content .card-header .d-flex {
         flex-direction: column;
         width: 100%;
       }
       
       .main-content .card-header .btn,
       .main-content .card-header .form-select {
         width: 100%;
         margin-right: 0 !important;
         margin-bottom: 0.5rem;
       }
       
       /* Improved form controls */
       .main-content .form-select {
         height: auto;
         padding: 0.7rem 2.25rem 0.7rem 1rem;
       }
       
       /* Improve modal footer buttons on mobile */
       .modal-footer {
         flex-direction: column;
         align-items: stretch;
         padding: 1rem;
       }
       
       .modal-footer .btn,
       .modal-footer a.btn {
         margin-left: 0 !important;
         margin-right: 0 !important;
         width: 100%;
         text-align: center;
         justify-content: center;
         margin-bottom: 0.5rem;
       }
       
       .modal-footer .btn:last-child,
       .modal-footer a.btn:last-child {
         margin-bottom: 0;
       }
     }
     
         </style>
</head>
<body>
    <!-- Add hamburger menu button -->
    <button class="mobile-toggle" id="mobileToggle">
        <span></span>
        <span></span>
        <span></span>
    </button>
    <div class="container">
        <div id="loadingOverlay" class="loading-overlay">
            <div class="loading-spinner"></div>
        </div>
        <div id="pageContent"> </div>

        <%- include('partials/sidebar') %>
            
        <div class="main-content">
            <div class="d-flex flex-wrap justify-content-center gap-3 p-2 bg-light rounded shadow-sm">
                <a class="nav-link  text-nowrap" href="<%= ingress_path %>/learner">
                    <i class="fas fa-brain me-1" style="color: #6C757D;"></i>Learner
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/grid-charge">
                    <i class="fas fa-plug me-1" style="color: #007BFF;"></i>Grid Charge
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/energy-pattern">
                    <i class="fas fa-battery-three-quarters me-1" style="color: #28A745;"></i>Energy Pattern
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/voltage-point">
                    <i class="fas fa-bolt me-1" style="color: #DC3545;"></i>Voltage Points
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/work-mode">
                    <i class="fas fa-cogs me-1" style="color: #FFC107;"></i>Work Mode
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/battery-charging">
                    <i class="fas fa-charging-station me-1" style="color: #17A2B8;"></i>Battery Charging
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/rules">
                    <i class="fas fa-tasks me-1" style="color: #6610F2;"></i>Rules
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/wizard">
                    <i class="fas fa-magic me-1" style="color: #20c997;"></i>Rule Wizard
                </a>
                <a class="nav-link text-nowrap" href="<%= ingress_path %>/rule-history">
                    <i class="fas fa-history me-1" style="color: #6f42c1;"></i>Rule History
                </a>
            </div>
            <br>

            <div class="container">
                <!-- Alerts container -->
                <div id="alerts-container"></div>
        
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0"><i class="fas fa-history me-2"></i>Rule Execution History</h5>
                                <div>
                                    <button class="btn btn-secondaryy me-2" id="refresh-history">
                                        <i class="fas fa-sync-alt me-1"></i> Refresh
                                    </button>
                                    <select class="form-select d-inline-block" style="width: auto;" id="sort-order">
                                        <option value="time-desc">Most Recent First</option>
                                        <option value="time-asc">Oldest First</option>
                                        <option value="trigger-desc">Most Triggered First</option>
                                    </select>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    This page shows the history of rule executions. Click on a rule to view more details.
                                </div>
                                
                                <!-- Stats summary -->
                             
<div class="stats-card-container">
  <div class="stats-card">
      <div class="stats-card-icon stats-card-icon-total-rules">
          <i class="fas fa-tasks"></i>
      </div>
      <div class="stats-card-content">
          <div class="stats-card-title">Total Rules</div>
          <h2 class="stats-card-value" id="total-rules-count">--</h2>
      </div>
  </div>
  
  <div class="stats-card">
      <div class="stats-card-icon stats-card-icon-total-executions">
          <i class="fas fa-play-circle"></i>
      </div>
      <div class="stats-card-content">
          <div class="stats-card-title">Total Executions</div>
          <h2 class="stats-card-value" id="total-executions-count">--</h2>
      </div>
  </div>
  
  <div class="stats-card">
      <div class="stats-card-icon stats-card-icon-last-24h">
          <i class="fas fa-clock"></i>
      </div>
      <div class="stats-card-content">
          <div class="stats-card-title">Last 24 Hours</div>
          <h2 class="stats-card-value" id="last-24h-count">--</h2>
      </div>
  </div>
  
  <div class="stats-card">
      <div class="stats-card-icon stats-card-icon-most-active">
          <i class="fas fa-star"></i>
      </div>
      <div class="stats-card-content">
          <div class="stats-card-title">Most Active Rule</div>
          <p class="stats-card-value" id="most-active-rule" style="font-size: 1.2rem; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; max-width: 180px;">--</p>
      </div>
  </div>
</div>
                                
                                <!-- Rule history list -->
                                <div id="rule-history-container">
                                    <p class="text-center py-5">
                                        <span class="spinner-border text-primary" role="status"></span>
                                        <br>
                                        <span class="mt-2 d-inline-block">Loading rule history...</span>
                                    </p>
                                </div>
                                
                                <!-- Pagination -->
                                <div class="d-flex justify-content-between align-items-center mt-4">
                                    <div class="text-muted small" id="pagination-info">
                                        Showing 1-10 of 0 items
                                    </div>
                                    <div>
                                        <nav aria-label="Rule history pagination">
                                            <ul class="pagination mb-0" id="pagination-controls">
                                                <li class="page-item disabled">
                                                    <a class="page-link" href="#" aria-label="Previous" id="prev-page">
                                                        <span aria-hidden="true">&laquo;</span>
                                                    </a>
                                                </li>
                                                <li class="page-item disabled">
                                                    <a class="page-link" href="#" aria-label="Next" id="next-page">
                                                        <span aria-hidden="true">&raquo;</span>
                                                    </a>
                                                </li>
                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        
            <!-- Rule Details Modal -->
            <div class="modal fade" id="ruleDetailsModal" tabindex="-1" aria-labelledby="ruleDetailsModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="ruleDetailsModalLabel">Rule Details</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="text-center py-5" id="rule-details-loading">
                                <span class="spinner-border text-primary" role="status"></span>
                                <br>
                                <span class="mt-2 d-inline-block">Loading rule details...</span>
                            </div>
                            
                            <div id="rule-details-content" style="display: none;">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Rule Name</label>
                                        <p class="form-control-plaintext" id="detail-rule-name">-</p>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Status</label>
                                        <p class="form-control-plaintext" id="detail-rule-status">-</p>
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Last Triggered</label>
                                        <p class="form-control-plaintext" id="detail-last-triggered">-</p>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Trigger Count</label>
                                        <p class="form-control-plaintext" id="detail-trigger-count">-</p>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Description</label>
                                    <p class="form-control-plaintext" id="detail-description">-</p>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label fw-bold">Conditions</label>
                                            <div class="card bg-light">
                                                <div class="card-body p-3">
                                                    <ul class="list-unstyled mb-0" id="detail-conditions-list">
                                                        <li class="text-muted">No conditions</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label fw-bold">Actions</label>
                                            <div class="card bg-light">
                                                <div class="card-body p-3">
                                                    <ul class="list-unstyled mb-0" id="detail-actions-list">
                                                        <li class="text-muted">No actions</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Time Restrictions</label>
                                    <div class="card bg-light">
                                        <div class="card-body p-3">
                                            <ul class="list-unstyled mb-0" id="detail-time-restrictions">
                                                <li class="text-muted">No time restrictions</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondaryy" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-successs" id="execute-rule-btn">
                                <i class="fas fa-play me-1"></i> Execute Now
                            </button>
                            <a href="#" class="btn btn-primary" id="edit-rule-btn">
                                <i class="fas fa-edit me-1"></i> Edit Rule
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script>
      // Updated JavaScript for rule-history.ejs
// Replace the entire script section in your rule-history.ejs template

// Pagination state
let currentPage = 1;
let itemsPerPage = 10;
let totalItems = 0;
let currentRuleId = null;
const ingressPath = '<%= ingress_path %>';

// Initialize the page
$(document).ready(function() {
    console.log('DOM loaded, initializing rule history page...');
    // Load rule statistics
    loadRuleStatistics();
    
    // Load rule history with default sorting
    loadRuleHistory();
    
    // Set up event listeners
    setupEventListeners();
});

// Setup event listeners
function setupEventListeners() {
    // Refresh button
    $('#refresh-history').click(function() {
        loadRuleStatistics();
        loadRuleHistory();
        showAlert('info', 'Rule history refreshed');
    });
    
    // Sort order change
    $('#sort-order').change(function() {
        // Reset to first page when sorting changes
        currentPage = 1;
        loadRuleHistory();
    });
    
    // Pagination controls
    $('#prev-page').click(function(e) {
        e.preventDefault();
        if ($(this).parent().hasClass('disabled')) return;
        currentPage--;
        loadRuleHistory();
    });
    
    $('#next-page').click(function(e) {
        e.preventDefault();
        if ($(this).parent().hasClass('disabled')) return;
        currentPage++;
        loadRuleHistory();
    });
    
    // Execute rule button
    $('#execute-rule-btn').click(function() {
        if (!currentRuleId) return;
        executeRule(currentRuleId);
    });
    
    // Edit rule button
    $('#edit-rule-btn').click(function(e) {
        e.preventDefault();
        if (!currentRuleId) return;
        window.location.href = `${ingressPath}/wizard?edit=${currentRuleId}`;
    });
}

// Load rule statistics
function loadRuleStatistics() {
    $.ajax({
        url: `${ingressPath}/api/rules/statistics`,
        method: 'GET',
        dataType: 'json',
        success: function(data) {
            // Update the statistics display
            $('#total-rules-count').text(data.totalRules || 0);
            $('#total-executions-count').text(data.totalExecutions || 0);
            $('#last-24h-count').text(data.last24Hours || 0);
            $('#most-active-rule').text(data.mostActiveRule || 'None');
        },
        error: function(xhr, status, error) {
            console.error('Failed to load rule statistics:', error);
            showAlert('warning', 'Failed to load rule statistics');
        }
    });
}

// Load rule history
function loadRuleHistory() {
    // Get sort parameters
    const sortOption = $('#sort-order').val();
    let sortBy, sortOrder;
    
    switch (sortOption) {
        case 'time-desc':
            sortBy = 'last_triggered';
            sortOrder = 'DESC';
            break;
        case 'time-asc':
            sortBy = 'last_triggered';
            sortOrder = 'ASC';
            break;
        case 'trigger-desc':
            sortBy = 'trigger_count';
            sortOrder = 'DESC';
            break;
        case 'name-asc':
            sortBy = 'name';
            sortOrder = 'ASC';
            break;
    }
    
    // Calculate pagination parameters
    const skip = (currentPage - 1) * itemsPerPage;
    
    // Show loading state
    $('#rule-history-container').html(`
        <p class="text-center py-5">
            <span class="spinner-border text-primary" role="status"></span>
            <br>
            <span class="mt-2 d-inline-block">Loading rule history...</span>
        </p>
    `);
    
    $.ajax({
        url: `${ingressPath}/api/rules/history`,
        method: 'GET',
        dataType: 'json',
        data: {
            limit: itemsPerPage,
            skip: skip,
            sortBy: sortBy,
            sortOrder: sortOrder
        },
        success: function(response) {
            displayRuleHistory(response);
            updatePagination(response.pagination);
        },
        error: function(xhr, status, error) {
            console.error('Failed to load rule history:', error);
            $('#rule-history-container').html('<div class="alert alert-warning">Failed to load rule history</div>');
            updatePagination({ total: 0, limit: itemsPerPage, skip: 0 });
        }
    });
}

// Display rule history
function displayRuleHistory(response) {
    const container = $('#rule-history-container');
    
    if (!response || !response.rules || response.rules.length === 0) {
        container.html('<div class="alert alert-warning">No rule execution history found</div>');
        return;
    }
    
    let html = '';
    
    response.rules.forEach(rule => {
        const lastTriggered = rule.lastTriggered ? moment(rule.lastTriggered).format('MMM D, YYYY HH:mm:ss') : 'Never triggered';
        const formattedName = rule.name.length > 50 ? rule.name.substring(0, 47) + '...' : rule.name;
        const activeClass = rule.active ? '' : 'inactive-rule';
        
        html += `
            <div class="change-item rule-item ${activeClass}" data-rule-id="${rule.id}" data-rule-active="${rule.active}">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="setting-title">${formattedName}</div>
                        <div class="mt-1">
                            Last triggered: <span class="timestamp">${lastTriggered}</span>
                        </div>
                    </div>
                    <div class="d-flex align-items-center">
                        <span class="badge ${rule.active ? 'bg-success' : 'bg-secondary'} me-2">${rule.active ? 'Active' : 'Inactive'}</span>
                        <span class="badge bg-primary me-3">${rule.triggerCount || 0} executions</span>
                        <i class="fas fa-eye text-primary edit-icon"></i>
                    </div>
                </div>
            </div>
        `;
    });
    
    container.html(html);
    
    // Add click event to rule items
    $('.rule-item').click(function() {
        const ruleId = $(this).data('rule-id');
        showRuleDetails(ruleId);
    });
}

// Update pagination controls
function updatePagination(pagination) {
    totalItems = pagination.total || 0;
    const totalPages = Math.ceil(totalItems / itemsPerPage);
    const start = Math.min((currentPage - 1) * itemsPerPage + 1, totalItems);
    const end = Math.min(currentPage * itemsPerPage, totalItems);
    
    // Update pagination info text
    $('#pagination-info').text(`Showing ${start}-${end} of ${totalItems} items`);
    
    // Update pagination controls
    const prevPageBtn = $('#prev-page').parent();
    const nextPageBtn = $('#next-page').parent();
    
    if (currentPage <= 1) {
        prevPageBtn.addClass('disabled');
    } else {
        prevPageBtn.removeClass('disabled');
    }
    
    if (currentPage >= totalPages || totalPages === 0) {
        nextPageBtn.addClass('disabled');
    } else {
        nextPageBtn.removeClass('disabled');
    }
    
    // Clear existing page number buttons
    $('#pagination-controls li:not(:first-child):not(:last-child)').remove();
    
    // Add page number buttons
    if (totalPages > 0) {
        // Determine which page numbers to show
        let startPage = Math.max(1, currentPage - 2);
        let endPage = Math.min(totalPages, startPage + 4);
        
        if (endPage - startPage < 4) {
            startPage = Math.max(1, endPage - 4);
        }
        
        // Insert page number buttons
        for (let i = startPage; i <= endPage; i++) {
            const isActive = i === currentPage;
            const pageItem = $(`
                <li class="page-item ${isActive ? 'active' : ''}">
                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                </li>
            `);
            
            pageItem.insertBefore(nextPageBtn);
            
            // Add click event if not active page
            if (!isActive) {
                pageItem.click(function(e) {
                    e.preventDefault();
                    currentPage = parseInt($(this).find('a').data('page'));
                    loadRuleHistory();
                });
            }
        }
    }
}

// Show rule details
function showRuleDetails(ruleId) {
    // Store the current rule ID
    currentRuleId = ruleId;
    
    // Reset modal content
    $('#detail-rule-name').text('-');
    $('#detail-rule-status').text('-');
    $('#detail-last-triggered').text('-');
    $('#detail-trigger-count').text('-');
    $('#detail-description').text('-');
    $('#detail-conditions-list').html('<li class="text-muted">No conditions</li>');
    $('#detail-actions-list').html('<li class="text-muted">No actions</li>');
    $('#detail-time-restrictions').html('<li class="text-muted">No time restrictions</li>');
    
    // Show loading indicator
    $('#rule-details-loading').show();
    $('#rule-details-content').hide();
    
    // Show the modal
    const modal = new bootstrap.Modal(document.getElementById('ruleDetailsModal'));
    modal.show();
    
    // Load rule details
    $.ajax({
        url: `${ingressPath}/api/rules/${ruleId}/execution-history`,
        method: 'GET',
        dataType: 'json',
        success: function(response) {
            displayRuleDetails(response);
        },
        error: function(xhr, status, error) {
            console.error('Failed to load rule details:', error);
            showAlert('warning', 'Failed to load rule details', true);
            $('#rule-details-loading').hide();
            $('#rule-details-content').show();
        }
    });
}

// Display rule details
function displayRuleDetails(response) {
    if (!response || !response.rule) {
        showAlert('warning', 'No rule details available', true);
        return;
    }
    
    const rule = response.rule;
    
    // Basic rule information
    $('#detail-rule-name').text(rule.name);
    $('#detail-rule-status').html(
        rule.active 
            ? '<span class="badge bg-success">Active</span>' 
            : '<span class="badge bg-secondary">Inactive</span>'
    );
    
    $('#detail-last-triggered').text(
        rule.lastTriggered 
            ? moment(rule.lastTriggered).format('MMM D, YYYY HH:mm:ss') 
            : 'Never triggered'
    );
    
    $('#detail-trigger-count').text(rule.triggerCount || 0);
    $('#detail-description').text(rule.description || 'No description');
    
    // Conditions
    if (rule.conditions && rule.conditions.length > 0) {
        let conditionsHtml = '';
        
        rule.conditions.forEach(condition => {
            let operatorText = '';
            switch(condition.operator) {
                case 'eq': operatorText = 'equals'; break;
                case 'gt': operatorText = 'greater than'; break;
                case 'lt': operatorText = 'less than'; break;
                case 'gte': operatorText = 'greater than or equal to'; break;
                case 'lte': operatorText = 'less than or equal to'; break;
                default: operatorText = condition.operator;
            }
            
            conditionsHtml += `
                <li class="mb-2">
                    <i class="fas fa-check-circle text-success me-1"></i>
                    <strong>${formatParameterName(condition.parameter)}</strong> is ${operatorText} <span class="badge bg-light text-dark">${condition.value}</span>
                </li>
            `;
        });
        
        $('#detail-conditions-list').html(conditionsHtml);
    }
    
    // Actions
    if (rule.actions && rule.actions.length > 0) {
        let actionsHtml = '';
        
        rule.actions.forEach(action => {
            actionsHtml += `
                <li class="mb-2">
                    <i class="fas fa-cog text-primary me-1"></i>
                    Set <strong>${formatSettingName(action.setting)}</strong> to <span class="badge bg-light text-dark">${action.value}</span> on ${formatInverterName(action.inverter)}
                </li>
            `;
        });
        
        $('#detail-actions-list').html(actionsHtml);
    }
    
    // Time restrictions
    if (rule.timeRestrictions && rule.timeRestrictions.enabled) {
        let timeRestrictionsHtml = '';
        
        if (rule.timeRestrictions.startTime && rule.timeRestrictions.endTime) {
            timeRestrictionsHtml += `
                <li class="mb-2">
                    <i class="fas fa-clock text-warning me-1"></i>
                    Active between <strong>${rule.timeRestrictions.startTime}</strong> and <strong>${rule.timeRestrictions.endTime}</strong>
                </li>
            `;
        }
        
        if (rule.timeRestrictions.days && rule.timeRestrictions.days.length > 0) {
            const daysFormatted = rule.timeRestrictions.days
                .map(day => day.charAt(0).toUpperCase() + day.slice(1))
                .join(', ');
            
            timeRestrictionsHtml += `
                <li class="mb-2">
                    <i class="fas fa-calendar-day text-warning me-1"></i>
                    Active on: <strong>${daysFormatted}</strong>
                </li>
            `;
        }
        
        if (timeRestrictionsHtml) {
            $('#detail-time-restrictions').html(timeRestrictionsHtml);
        }
    }
    
    // Update the execute button based on rule active status
    if (!rule.active) {
        $('#execute-rule-btn').attr('disabled', 'disabled')
            .attr('title', 'Cannot execute inactive rule');
    } else {
        $('#execute-rule-btn').removeAttr('disabled')
            .removeAttr('title');
    }
    
    // Hide loading and show content
    $('#rule-details-loading').hide();
    $('#rule-details-content').show();
}

// Helper function to format parameter names
function formatParameterName(parameter) {
    return parameter
        .split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');
}

// Helper function to format setting names
function formatSettingName(setting) {
    return setting
        .split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');
}

// Helper function to format inverter names
function formatInverterName(inverter) {
    if (inverter === 'all') {
        return 'All Inverters';
    }
    
    return inverter
        .replace('_', ' ')
        .replace(/\b\w/g, l => l.toUpperCase());
}

// Execute rule - Updated with better error handling
function executeRule(ruleId) {
    // Show pending state
    $('#execute-rule-btn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i> Executing...');
    
    // Create a notification
    showAlert('info', 'Executing rule...', true);
    
    $.ajax({
        url: `${ingressPath}/api/rules/${ruleId}/execute`,
        method: 'POST',
        dataType: 'json',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },
        success: function(response) {
            showAlert('success', response.message || 'Rule executed successfully', true);
            
            // Update trigger count and last triggered time
            if (response.execution) {
                $('#detail-trigger-count').text(response.execution.triggerCount || 0);
                $('#detail-last-triggered').text(
                    response.execution.timestamp 
                        ? moment(response.execution.timestamp).format('MMM D, YYYY HH:mm:ss') 
                        : 'Just now'
                );
            }
            
            // Refresh the rule history after a short delay
            setTimeout(() => {
                loadRuleStatistics();
                loadRuleHistory();
            }, 1000);
        },
        error: function(xhr, status, error) {
            console.error('Failed to execute rule:', error);
            let errorMessage = 'Failed to execute rule';
            
            // Try to parse error message from response
            if (xhr.responseJSON && xhr.responseJSON.error) {
                errorMessage += ': ' + xhr.responseJSON.error;
            } else if (xhr.responseText) {
                try {
                    const errorData = JSON.parse(xhr.responseText);
                    if (errorData.error) {
                        errorMessage += ': ' + errorData.error;
                    }
                } catch (e) {
                    // If parsing fails, use the status text
                    errorMessage += ': ' + xhr.statusText;
                }
            }
            
            showAlert('danger', errorMessage, true);
        },
        complete: function() {
            $('#execute-rule-btn').prop('disabled', false).html('<i class="fas fa-play me-1"></i> Execute Now');
        }
    });
}

// Show alert message
function showAlert(type, message, inModal = false) {
    const alertId = 'alert-' + Date.now();
    const alertHtml = `
        <div id="${alertId}" class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    `;
    
    if (inModal) {
        // Insert at the top of the modal body
        $('.modal-body').prepend(alertHtml);
    } else {
        // Insert at the top of the page
        $('#alerts-container').append(alertHtml);
    }
    
    // Auto-dismiss after 5 seconds
    setTimeout(() => {
        $(`#${alertId}`).alert('close');
    }, 5000);
}
</script>

<script src="<%= ingress_path %>/js/loading.js"></script>
<script src="<%= ingress_path %>/js/dark-mode.js"></script>
<script src="<%= ingress_path %>/js/mobile.js"></script>
</body>
</html>
