<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carbonoz SolarAutopilot</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="<%= ingress_path %>/css/settings.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
   body {
       font-family: 'Inter', sans-serif;
   }
   :root {
    --primary-color: #DEAF0B;
    --bg-color: #f5f6fa;
    --text-color: #2f3640;
    --icon-color: #636e72;
   }
   
   body, html {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: var(--bg-color);
    
   }
    /* Sidebar styles */
           .sidebar {
               width: 280px;
               height: 100vh;
               background-color: white;
               border-right: 1px solid #e5e7eb;
               display: flex;
               flex-direction: column;
               position: fixed;
           }
   
           .logo-container {
               padding: 1.5rem;
               border-bottom: 1px solid #e5e7eb;
               display: flex;
               align-items: center;
               gap: 0.75rem;
           }
   
           .logo-icon {
    width: 50px;
    height: 50px;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: bold;
    font-size: 20px;
   }
   
   .logo-text {
    margin-left: 10px;
    font-weight: bold;
    color: var(--text-color);
    font-size: 18px;
   }
   
   .logo-text .highlight {
    color: var(--primary-color);
    margin-left: 10px;
   }
   
   
   nav {
    flex-grow: 1;
   }
   
   nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
   }
   nav li {
    padding: 15px 20px;
    display: flex;
    align-items: center;
    color: var(--text-color);
    cursor: pointer;
    transition: background-color 0.3s;
    font-size: 18px;
   }
   
   nav li a{
    text-decoration: none;
    color: #2f3640;
    font-weight: bold;
   }
   nav li:hover {
    background-color: var(--bg-color);
   }
   
   nav li i {
    margin-right: 15px;
    color: var(--icon-color);
    font-size: 24px;
   }
   
   .bottom-options {
    padding: 20px;
    border-top: 1px solid #dcdde1;
   }
   
   .toggle-sidebar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    font-size: 16px;
   }
   
   .toggle-text {
    margin-right: 10px;
   }
   
   .toggle-switch {
    width: 50px;
    height: 25px;
    background-color: #dcdde1;
    border-radius: 12.5px;
    position: relative;
    transition: background-color 0.3s;
   }
   .toggle-switch::before {
    content: '';
    position: absolute;
    width: 21px;
    height: 21px;
    border-radius: 50%;
    background-color: white;
    top: 2px;
    left: 2px;
    transition: transform 0.3s;
   }
   
   .toggle-switch.active {
    background-color: var(--primary-color);
   }
   
   .toggle-switch.active::before {
    transform: translateX(25px);
   }
   
   .sidebar.collapsed .logo-text,
   .sidebar.collapsed .search,
   .sidebar.collapsed nav li span,
   .sidebar.collapsed .toggle-text {
    display: none;
   }
   
   .sidebar.collapsed .logo {
    justify-content: center;
   }
   
   .sidebar.collapsed nav li {
    justify-content: center;
   }
   
   .sidebar.collapsed nav li i {
    margin-right: 0;
   }
           /* Main content styles */
           .main-content {
               flex: 1;
               margin-left: 280px;
               padding: 2rem;
           }
   
           .content-header {
               margin-bottom: 2rem;
           }
   
           .content-header h2 {
               font-size: 1.875rem;
               font-weight: 700;
               color: #111827;
           }
   
           .metrics-grid {
               display: grid;
               grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
               gap: 1.5rem;
               margin-bottom: 2rem;
           }
   
           .metric-card {
               background: white;
               border-radius: 12px;
               padding: 1.5rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .metric-title {
               font-size: 0.875rem;
               font-weight: 600;
               color: #4b5563;
               margin-bottom: 0.5rem;
           }
   
           .metric-value {
               font-size: 1.5rem;
               font-weight: 700;
               margin-bottom: 0.25rem;
           }
   
           .metric-subtitle {
               font-size: 0.875rem;
               color: #6b7280;
           }
   
           .chart-container {
               background: white;
               border-radius: 12px;
               padding: 1.5rem;
               margin-bottom: 2rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .chart-wrapper {
               height: 400px;
               margin-top: 1rem;
           }
   
           .period-buttons {
               display: flex;
               gap: 0.75rem;
               margin-bottom: 1rem;
           }
   
           .period-btn {
               padding: 0.5rem 1rem;
               border: none;
               background-color: #e5e7eb;
               color: #4b5563;
               border-radius: 6px;
               cursor: pointer;
               font-weight: 500;
               transition: all 0.2s;
           }
   
           .period-btn:hover {
               background-color: #d1d5db;
           }
   
           .period-btn.active {
               background-color: #DEAF0B;
               color: white;
           }
   
           /* Toggle styles */
           .toggle {
               position: relative;
               display: inline-block;
               width: 44px;
               height: 24px;
           }
   
           .toggle input {
               opacity: 0;
               width: 0;
               height: 0;
           }
   
           .slider {
               position: absolute;
               cursor: pointer;
               top: 0;
               left: 0;
               right: 0;
               bottom: 0;
               background-color: #e5e7eb;
               transition: .4s;
               border-radius: 34px;
           }
   
           .slider:before {
               position: absolute;
               content: "";
               height: 16px;
               width: 16px;
               left: 4px;
               bottom: 4px;
               background-color: white;
               transition: .4s;
               border-radius: 50%;
           }
   
           input:checked + .slider {
               background-color: #DEAF0B;
           }
   
           input:checked + .slider:before {
               transform: translateX(20px);
           }
   
           /* Updated and new styles */
           .bottom-controls {
               padding: 1.5rem;
               border-top: 1px solid #e5e7eb;
           }
   
           .control-item {
               display: flex;
               justify-content: space-between;
               align-items: center;
               margin-bottom: 1rem;
           }
   
           .control-label {
               font-size: 0.875rem;
               color: #4b5563;
           }
   
           .toggle {
               position: relative;
               display: inline-block;
               width: 44px;
               height: 24px;
           }
   
           .toggle input {
               opacity: 0;
               width: 0;
               height: 0;
           }
   
           .sidebar {
    width: 280px;
    background-color: white;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    transition: width 0.3s ease;
    z-index: 10;
   }
   
   .sidebar.collapsed {
    width: 80px;
   }
   
   .logo {
    display: flex;
    align-items: center;
    padding: 20px;
   }
   
   
           input:checked + .slider {
               background-color: #DEAF0B;
           }
   
           input:checked + .slider:before {
               transform: translateX(20px);
           }
   
           .total-emissions {
               font-size: 1.25rem;
               font-weight: 600;
               margin-bottom: 1rem;
               color: #374151;
           }
   
           .summary-grid {
               display: grid;
               grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
               gap: 1rem;
               margin-bottom: 2rem;
           }
   
           .summary-item {
               background-color: white;
               border-radius: 8px;
               padding: 1rem;
               box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
           }
   
           .summary-label {
               font-size: 0.875rem;
               color: #6b7280;
               display: block;
               margin-bottom: 0.5rem;
           }
   
           .summary-value {
               font-size: 1.25rem;
               font-weight: 600;
           }
   
       
   
           /* Responsive styles */
           @media (max-width: 768px) {
               .sidebar {
                   width: 100%;
                   height: auto;
                   position: static;
                   border-right: none;
                   border-bottom: 1px solid #e5e7eb;
               }
   
               .main-content {
                   margin-left: 0;
               }
   
               body.collapsed-sidebar .sidebar {
                   display: none;
               }
   
               body.collapsed-sidebar .main-content {
                   margin-left: 0;
               }
   
               .metrics-grid,
               .summary-grid {
                   grid-template-columns: 1fr;
               }
   
               .period-buttons {
                   flex-wrap: wrap;
               }
   
               .period-btn {
                   flex: 1 0 calc(50% - 0.375rem);
                   margin-bottom: 0.75rem;
               }
           }
   /* loading css */
   .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f8f9fa;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
   }
   
   .loading-spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #e0e0e0;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
   }
   
   @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
   } 
           /* Dark mode styles */
   body.dark-mode {
       background-color: rgba(24, 27, 31, 1);
    color: #f5f6fa;
   }
   
   .dark-mode .sidebar {
       background-color: rgba(24, 27, 31, 1);
   }
   
   .dark-mode .sidebar .logo-icon {
    color: #2f3640;
   }
   
   .dark-mode .sidebar .logo-text {
    color: #f5f6fa;
   }
   
   .dark-mode .sidebar nav li {
    color: #f5f6fa;
   }
   
   .dark-mode .sidebar nav li:hover {
    background-color: #383838;
   }
   
   .dark-mode .sidebar nav li a {
    color: #f5f6fa;
   }
   
   .dark-mode .sidebar nav li i {
    color: #dcdde1;
   }
   
   .dark-mode .toggle-sidebar,
   .dark-mode .toggle-dark-mode {
    color: #f5f6fa;
   }
   
   .dark-mode .toggle-switch {
       background-color: var(--primary-color);
   }
   
   .dark-mode .toggle-switch.active {
    background-color: var(--primary-color);
   }
   
   .dark-mode header {
       background-color: rgb(17, 18, 23);
   }
   
   .dark-mode .main-content {
       background-color: rgba(24, 27, 31, 1);
    color: #fff;
   }
   
   .dark-mode .metric-card {
     background-color: rgb(32, 36, 41);
   
    color: #fff;
   }
   .dark-mode .chart-container{
     background-color: rgb(32, 36, 41);
   
   color: #fff;
   }
   .dark-mode  .summary-item {
     background-color: rgb(32, 36, 41);
   
   color: #fff;
   }
   .dark-mode .loading-overlay{
       background-color: rgba(24, 27, 31, 1);
   }
   a{
     text-decoration: none;
   } /* API Key Container Styles */
.api-key-container {
  background: white;
  border-radius: 12px;
  padding: 1.5rem;
  margin: 1.5rem 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.dark-mode .api-key-container {
  background: rgb(32, 36, 41);
  color: white;
}

/* API Key Form Styles */
#api-key-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

#api-key-form label {
  font-weight: 600;
  font-size: 0.9rem;
  color: #4b5563;
}

.dark-mode #api-key-form label {
  color: #e5e7eb;
}

#api-key-form input[type="text"] {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid #e5e7eb;
  border-radius: 6px;
  font-size: 1rem;
  transition: border-color 0.3s ease;
}

#api-key-form input[type="text"]:focus {
  border-color: #DEAF0B;
  outline: none;
  box-shadow: 0 0 0 3px rgba(222, 175, 11, 0.1);
}

/* Button Styles */
.api-key-actions {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.api-button {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
}

.api-button.primary {
  background-color: #DEAF0B;
  color: white;
}

.api-button.primary:hover {
  background-color: #c59a0a;
}

.api-button.secondary {
  background-color: #e5e7eb;
  color: #4b5563;
}

.api-button.secondary:hover {
  background-color: #d1d5db;
}

/* API Key Display Styles */
.api-key-display {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: #f9fafb;
  border-radius: 6px;
  margin-bottom: 1rem;
}

.dark-mode .api-key-display {
  background-color: rgba(24, 27, 31, 1);
}

.api-key-value {
  font-family: monospace;
  color: #374151;
  flex-grow: 1;
}

.dark-mode .api-key-value {
  color: #e5e7eb;
}

/* Response Message Styles */
#responseMessage {
  padding: 1rem;
  margin: 1rem 0;
  border-radius: 6px;
  display: none;
}

#responseMessage.success {
  background-color: #dcfce7;
  color: #166534;
  display: block;
}

#responseMessage.error {
  background-color: #fee2e2;
  color: #991b1b;
  display: block;
}

/* Hidden State */
.api-key-container.hidden #api-key-form {
  display: none;
}
       </style>
</head>
<body>

  <div id="loadingOverlay" class="loading-overlay">
    <div class="loading-spinner"></div>
</div>
<div id="pageContent">
    <!-- Sidebar -->
    <%- include('partials/sidebar') %>


    <!-- Main Content -->
    <main class="main-content">
      <div class="container-config">
            <div class="timezone-container">
                <h3>Timezone:</h3>
                <select id="timezone" class="timezone-select">
                  <option value="Pacific/Niue">(GMT-11:00) Niue</option>
                  <option value="Pacific/Pago_Pago">(GMT-11:00) Pago Pago</option>
                  <option value="Pacific/Honolulu">(GMT-10:00) Hawaii Time</option>
                  <option value="Pacific/Rarotonga">(GMT-10:00) Rarotonga</option>
                  <option value="Pacific/Tahiti">(GMT-10:00) Tahiti</option>
                  <option value="Pacific/Marquesas">(GMT-09:30) Marquesas Islands</option>
                  <option value="America/Anchorage">(GMT-09:00) Alaska Time</option>
                  <option value="Pacific/Gambier">(GMT-09:00) Gambier Islands</option>
                  <option value="America/Los_Angeles">(GMT-08:00) Pacific Time (US & Canada)</option>
                  <option value="America/Tijuana">(GMT-08:00) Tijuana, Baja California</option>
                  <option value="America/Vancouver">(GMT-08:00) Vancouver</option>
                  <option value="America/Phoenix">(GMT-07:00) Arizona</option>
                  <option value="America/Denver">(GMT-07:00) Mountain Time (US & Canada)</option>
                  <option value="America/Mazatlan">(GMT-07:00) Mazatlan</option>
                  <option value="America/Chicago">(GMT-06:00) Central Time (US & Canada)</option>
                  <option value="America/Mexico_City">(GMT-06:00) Mexico City</option>
                  <option value="America/Regina">(GMT-06:00) Saskatchewan</option>
                  <option value="America/Bogota">(GMT-05:00) Bogota</option>
                  <option value="America/New_York">(GMT-05:00) Eastern Time (US & Canada)</option>
                  <option value="America/Havana">(GMT-05:00) Cuba</option>
                  <option value="America/Lima">(GMT-05:00) Lima</option>
                  <option value="America/Cayman">(GMT-05:00) Cayman Islands</option>
                  <option value="America/Caracas">(GMT-04:30) Caracas</option>
                  <option value="America/Halifax">(GMT-04:00) Atlantic Time (Canada)</option>
                  <option value="America/La_Paz">(GMT-04:00) La Paz</option>
                  <option value="America/Santiago">(GMT-04:00) Santiago</option>
                  <option value="America/St_Johns">(GMT-03:30) Newfoundland</option>
                  <option value="America/Sao_Paulo">(GMT-03:00) Brasilia</option>
                  <option value="America/Argentina/Buenos_Aires">(GMT-03:00) Buenos Aires</option>
                  <option value="America/Godthab">(GMT-03:00) Greenland</option>
                  <option value="America/Montevideo">(GMT-03:00) Montevideo</option>
                  <option value="Atlantic/South_Georgia">(GMT-02:00) Mid-Atlantic</option>
                  <option value="Atlantic/Azores">(GMT-01:00) Azores</option>
                  <option value="Atlantic/Cape_Verde">(GMT-01:00) Cape Verde Is.</option>
                  <option value="Africa/Casablanca">(GMT+00:00) Casablanca</option>
                  <option value="Europe/London">(GMT+00:00) Edinburgh, London</option>
                  <option value="Europe/Lisbon">(GMT+00:00) Lisbon</option>
                  <option value="Africa/Monrovia">(GMT+00:00) Monrovia</option>
                  <option value="UTC">(GMT+00:00) UTC</option>
                  <option value="Europe/Amsterdam">(GMT+01:00) Amsterdam</option>
                  <option value="Europe/Belgrade">(GMT+01:00) Belgrade</option>
                  <option value="Europe/Berlin">(GMT+01:00) Berlin</option>
                  <option value="Europe/Bratislava">(GMT+01:00) Bratislava</option>
                  <option value="Europe/Brussels">(GMT+01:00) Brussels</option>
                  <option value="Europe/Budapest">(GMT+01:00) Budapest</option>
                  <option value="Europe/Copenhagen">(GMT+01:00) Copenhagen</option>
                  <option value="Europe/Ljubljana">(GMT+01:00) Ljubljana</option>
                  <option value="Europe/Madrid">(GMT+01:00) Madrid</option>
                  <option value="Europe/Paris">(GMT+01:00) Paris</option>
                  <option value="Europe/Prague">(GMT+01:00) Prague</option>
                  <option value="Europe/Rome">(GMT+01:00) Rome</option>
                  <option value="Europe/Sarajevo">(GMT+01:00) Sarajevo</option>
                  <option value="Europe/Skopje">(GMT+01:00) Skopje</option>
                  <option value="Europe/Stockholm">(GMT+01:00) Stockholm</option>
                  <option value="Europe/Vienna">(GMT+01:00) Vienna</option>
                  <option value="Europe/Warsaw">(GMT+01:00) Warsaw</option>
                  <option value="Africa/Lagos">(GMT+01:00) West Central Africa</option>
                  <option value="Europe/Zagreb">(GMT+01:00) Zagreb</option>
                  <option value="Europe/Athens">(GMT+02:00) Athens</option>
                  <option value="Europe/Bucharest">(GMT+02:00) Bucharest</option>
                  <option value="Africa/Cairo">(GMT+02:00) Cairo</option>
                  <option value="Africa/Harare">(GMT+02:00) Harare</option>
                  <option value="Europe/Helsinki">(GMT+02:00) Helsinki</option>
                  <option value="Europe/Istanbul">(GMT+02:00) Istanbul</option>
                  <option value="Asia/Jerusalem">(GMT+02:00) Jerusalem</option>
                  <option value="Europe/Kiev">(GMT+02:00) Kyiv</option>
                  <option value="Africa/Johannesburg">(GMT+02:00) Pretoria</option>
                  <option value="Europe/Riga">(GMT+02:00) Riga</option>
                  <option value="Europe/Sofia">(GMT+02:00) Sofia</option>
                  <option value="Europe/Tallinn">(GMT+02:00) Tallinn</option>
                  <option value="Europe/Vilnius">(GMT+02:00) Vilnius</option>
                  <option value="Asia/Baghdad">(GMT+03:00) Baghdad</option>
                  <option value="Asia/Kuwait">(GMT+03:00) Kuwait</option>
                  <option value="Europe/Minsk">(GMT+03:00) Minsk</option>
                  <option value="Africa/Nairobi">(GMT+03:00) Nairobi</option>
                  <option value="Asia/Riyadh">(GMT+03:00) Riyadh</option>
                  <option value="Europe/Volgograd">(GMT+03:00) Volgograd</option>
                  <option value="Asia/Tehran">(GMT+03:30) Tehran</option>
                  <option value="Asia/Muscat">(GMT+04:00) Abu Dhabi, Muscat</option>
                  <option value="Asia/Baku">(GMT+04:00) Baku</option>
                  <option value="Indian/Mauritius">(GMT+04:00) Port Louis, Mauritius</option>
                  <option value="Europe/Moscow">(GMT+04:00) Moscow, St. Petersburg</option>
                  <option value="Asia/Tbilisi">(GMT+04:00) Tbilisi</option>
                  <option value="Asia/Yerevan">(GMT+04:00) Yerevan</option>
                  <option value="Asia/Kabul">(GMT+04:30) Kabul</option>
                  <option value="Asia/Karachi">(GMT+05:00) Karachi</option>
                  <option value="Asia/Tashkent">(GMT+05:00) Tashkent</option>
                  <option value="Asia/Kolkata">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>
                  <option value="Asia/Colombo">(GMT+05:30) Sri Jayawardenepura</option>
                  <option value="Asia/Kathmandu">(GMT+05:45) Kathmandu</option>
                  <option value="Asia/Almaty">(GMT+06:00) Almaty</option>
                  <option value="Asia/Dhaka">(GMT+06:00) Astana, Dhaka</option>
                  <option value="Asia/Yekaterinburg">(GMT+06:00) Ekaterinburg</option>
                  <option value="Asia/Rangoon">(GMT+06:30) Yangon (Rangoon)</option>
                  <option value="Asia/Bangkok">(GMT+07:00) Bangkok, Hanoi, Jakarta</option>
                  <option value="Asia/Novosibirsk">(GMT+07:00) Novosibirsk</option>
                  <option value="Asia/Hong_Kong">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>
                  <option value="Asia/Krasnoyarsk">(GMT+08:00) Krasnoyarsk</option>
                  <option value="Asia/Kuala_Lumpur">(GMT+08:00) Kuala Lumpur</option>
                  <option value="Australia/Perth">(GMT+08:00) Perth</option>
                  <option value="Asia/Singapore">(GMT+08:00) Singapore</option>
                  <option value="Asia/Taipei">(GMT+08:00) Taipei</option>
                  <option value="Asia/Ulaanbaatar">(GMT+08:00) Ulaanbaatar</option>
                  <option value="Asia/Irkutsk">(GMT+09:00) Irkutsk</option>
                  <option value="Asia/Tokyo">(GMT+09:00) Osaka, Sapporo, Tokyo</option>
                  <option value="Asia/Seoul">(GMT+09:00) Seoul</option>
                  <option value="Australia/Adelaide">(GMT+09:30) Adelaide</option>
                  <option value="Australia/Darwin">(GMT+09:30) Darwin</option>
                  <option value="Australia/Brisbane">(GMT+10:00) Brisbane</option>
                  <option value="Australia/Canberra">(GMT+10:00) Canberra, Melbourne, Sydney</option>
                  <option value="Australia/Hobart">(GMT+10:00) Hobart</option>
                  <option value="Pacific/Guam">(GMT+10:00) Guam, Port Moresby</option>
                  <option value="Asia/Vladivostok">(GMT+11:00) Vladivostok</option>
                  <option value="Asia/Magadan">(GMT+12:00) Magadan, Solomon Is., New Caledonia</option>
                  <option value="Pacific/Auckland">(GMT+12:00) Auckland, Wellington</option>
                  <option value="Pacific/Fiji">(GMT+12:00) Fiji</option>
                  <option value="Pacific/Tongatapu">(GMT+13:00) Nuku'alofa</option>
              </select>
              </div>
        </form>
        <div class="api-key-container" id="apiKeyContainer">
          <div class="api-key-display">
            <span class="api-key-value">API Key: ••••••••••••</span>
            <button class="api-button secondary" id="toggleApiForm">Update API Key</button>
          </div>
          
          <form id="api-key-form" style="display: none;">
            <label for="api_key">Enter New API Key:</label>
            <input type="text" id="api_key" name="api_key" value="<%= api_key %>" required />
            <div class="api-key-actions">
              <button type="submit" class="api-button primary">Save API Key</button>
              <button type="button" class="api-button secondary" id="cancelApiUpdate">Cancel</button>
            </div>
          </form>
          <div id="responseMessage"></div>
        </div>
        
        <div class="form-container">
          <% if (selectedZone) { %>
            <div class="current-zone">
              Currently selected zone: <%= zones.find(z => z.code === selectedZone)?.zoneName || selectedZone %>
            </div>
          <% } %>
          <form action="<%= ingress_path %>/results" method="GET">
            <label for="zone">Choose a Carbon Intensity zone:</label>
            <select name="zone" id="zone" class="form-select">
              <option value="">-- Select a zone --</option>
              <% zones.forEach(function(zone) { %>
                <option value="<%= zone.code %>" <%= selectedZone === zone.code ? 'selected' : '' %>>
                  <%= zone.zoneName %> (<%= zone.code %>)
                </option>
              <% }); %>
            </select>
            
            <div class="button-container" style="display: flex; gap: 10px;">
              <button type="submit" class="form-button">
                Update Zone
              </button>
              
              <% if (selectedZone) { %>
                <a href="<%= ingress_path %>/clear-zone" class="button danger">
                  Clear Selection
                </a>
              <% } %>
            </div>
            
          </form>
          
          <div style="margin-top: 20px; text-align: center;">
            <a href="<%= ingress_path %>/results" class="button" style="display: inline-block; text-decoration: none;">
              View Current Results
            </a>
        </div>
    </div>
    </main>
</div>
  

<script>
  const ingressPath = '<%= ingress_path %>';

// Fetch current timezone
fetch(`${ingressPath}/api/timezone`)
  .then(response => response.json())
  .then(data => {
    document.getElementById('timezone').value = data.timezone;
  });

// Update timezone when changed
document.getElementById('timezone').addEventListener('change', (event) => {
  fetch(`${ingressPath}/api/timezone`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ timezone: event.target.value }),
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      alert('Timezone updated successfully');
    } else {
      alert('Failed to update timezone');
    }
  });
});

</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const apiKeyContainer = document.getElementById('apiKeyContainer');
    const apiKeyForm = document.getElementById('api-key-form');
    const toggleButton = document.getElementById('toggleApiForm');
    const cancelButton = document.getElementById('cancelApiUpdate');
    const responseMessage = document.getElementById('responseMessage');
    
    // Toggle form visibility
    toggleButton.addEventListener('click', () => {
      apiKeyForm.style.display = 'flex';
      toggleButton.style.display = 'none';
    });
    
    // Handle cancel button
    cancelButton.addEventListener('click', () => {
      apiKeyForm.style.display = 'none';
      toggleButton.style.display = 'block';
      apiKeyForm.reset();
    });
    
    // Handle form submission
    apiKeyForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      try {
        const response = await fetch(`<%= ingress_path %>/api/api-key`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            api_key: document.getElementById('api_key').value
          })
        });
        
        const data = await response.json();
        
        if (data.success) {
          responseMessage.textContent = 'API key updated successfully';
          responseMessage.className = 'success';
          apiKeyForm.style.display = 'none';
          toggleButton.style.display = 'block';
        } else {
          responseMessage.textContent = data.error || 'Failed to update API key';
          responseMessage.className = 'error';
        }
      } catch (error) {
        responseMessage.textContent = 'An error occurred while updating the API key';
        responseMessage.className = 'error';
      }
      
      // Hide response message after 3 seconds
      setTimeout(() => {
        responseMessage.style.display = 'none';
      }, 3000);
    });
  });
  </script>


<script src="<%= ingress_path %>/js/loading.js"></script>
<script src="<%= ingress_path %>/js/dark-mode.js"></script>>



</body>
</html>
