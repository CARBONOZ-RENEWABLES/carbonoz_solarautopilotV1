name: Deploy

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      name: ${{ steps.information.outputs.name }}
      slug: ${{ steps.information.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.4.0

  deploy:
    name: 👷 Build & Deploy ${{ matrix.architecture }}
    needs: information
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: ${{ fromJson(needs.information.outputs.architectures) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: docker-${{ github.ref }}-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            docker-${{ github.ref }}-${{ matrix.architecture }}
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: 🏗 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🚀 Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          # yamllint disable rule:line-length
          platforms: linux/${{ matrix.architecture }}
          context: ./carbonoz
          file: ./carbonoz/Dockerfile
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache-new
          tags: |
            ghcr.io/eelitedesire/${{ needs.information.outputs.slug }}/${{ matrix.architecture }}:${{ github.event.release.tag_name || 'edge' }}
            ghcr.io/eelitedesire/${{ needs.information.outputs.slug }}/${{ matrix.architecture }}:latest
          labels: |
            org.opencontainers.image.title=${{ needs.information.outputs.name }}
            org.opencontainers.image.description=${{ needs.information.outputs.description }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=MIT
      - name: 🔄 Sync Docker Cache
        run: |
          rm -f /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache

  publish-edge:
    name: 📢 Publish to Edge repository
    needs: [information, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Dispatch repository updater
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: eelitedesire/homeassistant-repository-edge
          event-type: update
          client-payload: >
            {
              "addon": "${{ needs.information.outputs.slug }}",
              "name": "${{ needs.information.outputs.name }}",
              "repository": "${{ github.repository }}",
              "version": "${{ github.event.release.tag_name || 'edge' }}"
            }

  publish-beta:
    name: 📢 Publish to Beta repository
    needs: [information, deploy]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease
    steps:
      - name: 🚀 Dispatch repository updater
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: eelitedesire/homeassistant-repository-beta
          event-type: update
          client-payload: >
            {
              "addon": "${{ needs.information.outputs.slug }}",
              "name": "${{ needs.information.outputs.name }}",
              "repository": "${{ github.repository }}",
              "version": "${{ github.event.release.tag_name }}"
            }

  publish-stable:
    name: 📢 Publish to Stable repository
    needs: [information, deploy]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    steps:
      - name: 🚀 Dispatch repository updater
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: eelitedesire/homeassistant-repository
          event-type: update
          client-payload: >
            {
              "addon": "${{ needs.information.outputs.slug }}",
              "name": "${{ needs.information.outputs.name }}",
              "repository": "${{ github.repository }}",
              "version": "${{ github.event.release.tag_name }}"
            }