name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_HUB_REPO: elitedesire/carbonozrenewables

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${GITHUB_SHA::8}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      
      - name: Map Docker platform
        id: platform
        run: |
          case "${{ matrix.arch }}" in
            aarch64) echo "platform=linux/arm64" >> $GITHUB_OUTPUT ;;
            amd64) echo "platform=linux/amd64" >> $GITHUB_OUTPUT ;;
            armhf) echo "platform=linux/arm/v6" >> $GITHUB_OUTPUT ;;
            armv7) echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT ;;
            i386) echo "platform=linux/386" >> $GITHUB_OUTPUT ;;
          esac
      
      - name: Get Home Assistant base image
        id: base
        run: |
          case "${{ matrix.arch }}" in
            aarch64) echo "image=ghcr.io/home-assistant/aarch64-base:3.16" >> $GITHUB_OUTPUT ;;
            amd64) echo "image=ghcr.io/home-assistant/amd64-base:3.16" >> $GITHUB_OUTPUT ;;
            armhf) echo "image=ghcr.io/home-assistant/armhf-base:3.16" >> $GITHUB_OUTPUT ;;
            armv7) echo "image=ghcr.io/home-assistant/armv7-base:3.16" >> $GITHUB_OUTPUT ;;
            i386) echo "image=ghcr.io/home-assistant/i386-base:3.16" >> $GITHUB_OUTPUT ;;
          esac
      
      - name: Build and push architecture-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ steps.platform.outputs.platform }}
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REPO }}:${{ matrix.arch }}-latest
            ${{ env.DOCKER_HUB_REPO }}:${{ matrix.arch }}-${{ steps.version.outputs.version }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.image }}
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_REF=${{ github.sha }}
            BUILD_VERSION=${{ steps.version.outputs.version }}
          cache-from: type=gha,scope=${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${GITHUB_SHA::8}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create and push multi-arch manifest for latest
        run: |
          docker manifest create ${{ env.DOCKER_HUB_REPO }}:latest \
            ${{ env.DOCKER_HUB_REPO }}:aarch64-latest \
            ${{ env.DOCKER_HUB_REPO }}:amd64-latest \
            ${{ env.DOCKER_HUB_REPO }}:armhf-latest \
            ${{ env.DOCKER_HUB_REPO }}:armv7-latest \
            ${{ env.DOCKER_HUB_REPO }}:i386-latest
          
          docker manifest push ${{ env.DOCKER_HUB_REPO }}:latest
      
      - name: Create and push multi-arch manifest for version
        run: |
          docker manifest create ${{ env.DOCKER_HUB_REPO }}:${{ steps.version.outputs.version }} \
            ${{ env.DOCKER_HUB_REPO }}:aarch64-${{ steps.version.outputs.version }} \
            ${{ env.DOCKER_HUB_REPO }}:amd64-${{ steps.version.outputs.version }} \
            ${{ env.DOCKER_HUB_REPO }}:armhf-${{ steps.version.outputs.version }} \
            ${{ env.DOCKER_HUB_REPO }}:armv7-${{ steps.version.outputs.version }} \
            ${{ env.DOCKER_HUB_REPO }}:i386-${{ steps.version.outputs.version }}
          
          docker manifest push ${{ env.DOCKER_HUB_REPO }}:${{ steps.version.outputs.version }}