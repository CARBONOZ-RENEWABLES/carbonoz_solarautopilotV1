name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  lint-hadolint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Hadolint
        uses: brpaz/hadolint-action@v1.5.0

  lint-json:
    name: Lint JSON
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run JSON Lint
        uses: frenck/action-json-lint@v1.3.0
        with:
          path: |
            .devcontainer/devcontainer.json
            .vscode/tasks.json
            carbonoz/config.json
            repository.json

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run mdl
        uses: actionshub/markdownlint@2.0.2

  lint-shellcheck:
    name: Lint Shell scripts
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        env:
          SHELLCHECK_OPTS: -s bash

  lint-yamllint:
    name: Lint YAML
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run YAMLlint
        uses: frenck/action-yamllint@v1.4.0

  lint-prettier:
    name: Lint Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 18
      - name: 🏗 Install dependencies
        run: npm install prettier
      - name: 🚀 Run Prettier
        run: npx prettier --check .

  build:
    name: Build Add-on
    needs:
      - lint-hadolint
      - lint-json
      - lint-markdown
      - lint-shellcheck
      - lint-yamllint
      - lint-prettier
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: docker-${{ github.ref }}-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            docker-${{ github.ref }}-${{ matrix.arch }}
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: 🏗 Set up metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/eelitedesire/carbonoz_solarautopilot/${{ matrix.arch }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: 🏗 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🚀 Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/${{ matrix.arch }}
          context: ./carbonoz
          file: ./carbonoz/Dockerfile
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache-new
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
