name: Build and Push Multi-Arch Containers

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Map architecture to Docker platform
      id: arch-map
      run: |
        case "${{ matrix.arch }}" in
          aarch64) echo "platform=linux/arm64" >> $GITHUB_OUTPUT ;;
          amd64) echo "platform=linux/amd64" >> $GITHUB_OUTPUT ;;
          armhf) echo "platform=linux/arm/v6" >> $GITHUB_OUTPUT ;;
          armv7) echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT ;;
          i386) echo "platform=linux/386" >> $GITHUB_OUTPUT ;;
        esac

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ steps.arch-map.outputs.platform }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}-${{ matrix.arch }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_FROM=ghcr.io/home-assistant/${{ matrix.arch }}-base:3.16
          BUILD_ARCH=${{ matrix.arch }}
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          BUILD_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          BUILD_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Create and push manifest
      run: |
        for tag in ${{ steps.meta.outputs.tags }}; do
          docker manifest create $tag \
            $tag-aarch64 \
            $tag-amd64 \
            $tag-armhf \
            $tag-armv7 \
            $tag-i386
          docker manifest push $tag
        done
