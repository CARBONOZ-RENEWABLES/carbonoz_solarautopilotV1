name: Build and Push Container Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: carbonoz-renewables/solarautopilot

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Map architecture
        id: arch
        run: |
          case "${{ matrix.arch }}" in
            aarch64) echo "platform=linux/arm64" >> $GITHUB_OUTPUT ;;
            amd64) echo "platform=linux/amd64" >> $GITHUB_OUTPUT ;;
            armhf) echo "platform=linux/arm/v6" >> $GITHUB_OUTPUT ;;
            armv7) echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT ;;
            i386) echo "platform=linux/386" >> $GITHUB_OUTPUT ;;
          esac
      
      - name: Get base image
        id: base
        run: |
          case "${{ matrix.arch }}" in
            aarch64) echo "image=ghcr.io/home-assistant/aarch64-base:3.16" >> $GITHUB_OUTPUT ;;
            amd64) echo "image=ghcr.io/home-assistant/amd64-base:3.16" >> $GITHUB_OUTPUT ;;
            armhf) echo "image=ghcr.io/home-assistant/armhf-base:3.16" >> $GITHUB_OUTPUT ;;
            armv7) echo "image=ghcr.io/home-assistant/armv7-base:3.16" >> $GITHUB_OUTPUT ;;
            i386) echo "image=ghcr.io/home-assistant/i386-base:3.16" >> $GITHUB_OUTPUT ;;
          esac
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ steps.arch.outputs.platform }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}-${{ github.sha }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.image }}
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            BUILD_REF=${{ github.sha }}
            BUILD_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Create and push manifest
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          for tag in $TAGS; do
            docker manifest create $tag \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:aarch64-${{ github.sha }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64-${{ github.sha }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:armhf-${{ github.sha }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:armv7-${{ github.sha }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:i386-${{ github.sha }}
            docker manifest push $tag
          done