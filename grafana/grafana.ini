# Grafana configuration for Home Assistant Add-on
# Optimized for memory-constrained environments

[paths]
data = /data/grafana
logs = /var/log/grafana
plugins = /data/grafana/plugins
provisioning = /etc/grafana/provisioning
temp_data_lifetime = 24h

[server]
# Use environment variable for ingress path
root_url = %(protocol)s://%(domain)s:%(http_port)s
serve_from_sub_path = true
enable_gzip = true
http_port = 3001
router_logging = false

# Memory optimization
[rendering]
server_max_concurrent_renderings = 2
callback_timeout = 30
concurrent_render_limit = 5
# Disable Image Renderer plugin to save memory
rendering_driver = null

[security]
# Adjust as needed
admin_user = admin
admin_password = admin
allow_embedding = true
disable_initial_admin_creation = true
cookie_samesite = lax
strict_transport_security = false
# Set to true if you're using HTTPS
cookie_secure = false

[auth.anonymous]
enabled = true
org_role = Viewer

[auth]
disable_login_form = false
disable_signout_menu = true
login_maximum_inactive_lifetime_duration = 7d
login_maximum_lifetime_duration = 30d

[users]
auto_assign_org_role = Viewer
viewers_can_edit = false
editors_can_admin = false

[database]
# SQLite for low memory footprint
type = sqlite3
path = /data/grafana.db
# Enable WAL mode for better performance
wal = true
cache_mode = shared
# SQLite optimizations
sqlite_vfs = unix-excl

[session]
provider = file
provider_config = sessions
cookie_name = grafana_sess
cookie_secure = false
session_life_time = 86400
gc_interval_time = 86400
token_rotation_interval_minutes = 10

[analytics]
reporting_enabled = false
check_for_updates = false
feedback_links_enabled = false

[dashboards]
# Disable dashboard version history to reduce DB size
versions_to_keep = 1
min_refresh_interval = 1s
default_home_dashboard_path = /etc/grafana/provisioning/dashboards/solar_dashboard.json

[unified_alerting]
enabled = false

[alerting]
enabled = false
concurrent_render_limit = 2
evaluation_timeout_seconds = 30
max_annotations_to_keep = 500
# Reduce memory usage for alert evaluations
execute_alerts = false

[metrics]
enabled = false

[log]
mode = console
# Use file logging for better performance in production
# mode = file
# Adjust level based on needs
level = warn
filters = rendering:error

[explore]
enabled = false

[help]
enabled = false

[profile]
enabled = false

[quota]
enabled = false

[annotations]
enabled = false

[panels]
disable_sanitize_html = true
enable_alpha = false

[plugins]
enable_alpha = false
# Prevent loading unnecessary plugins to save memory
app_tls_skip_verify_insecure = false
plugin_admin_enabled = false
plugin_catalog_url = 

[live]
# Disable live updates to reduce memory usage
enabled = false

[feature_toggles]
enable = publicDashboards timezoneSelection

[expressions]
# Disable server-side expressions to save memory
enabled = false

[external_image_storage]
provider =

[remote_cache]
type = database

[dataproxy]
timeout = 30
keep_alive_seconds = 30
expect_continue_timeout_seconds = 1
idle_conn_timeout_seconds = 90
response_limit = 50000000
# Limit concurrent queries
max_connections = 20
max_idle_connections = 5

[auth.proxy]
enabled = false

[unified_alerting.screenshots]
capture = false

[tracing.opentelemetry]
enabled = false

# Memory specific tuning
[memory]
total_memory_limit_mb = 240
# Applies soft limit to reduce memory usage
limit_percentage = 80
# How often to check memory usage
limit_refresh_rate = 1m
# Aggressively free memory back to OS
gc_interval = 5m
